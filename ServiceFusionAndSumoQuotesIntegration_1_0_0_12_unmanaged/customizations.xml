<ImportExportXml xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Entities></Entities>
  <Roles></Roles>
  <Workflows>
    <Workflow WorkflowId="{aded8f07-bb2a-4ef0-a86b-bfa132a09ce5}" Name="updt sent report details on SF">
      <JsonFileName>/Workflows/updtsentreportdetailsonSF-ADED8F07-BB2A-4EF0-A86B-BFA132A09CE5.json</JsonFileName>
      <Type>1</Type>
      <Subprocess>0</Subprocess>
      <Category>6</Category>
      <Mode>0</Mode>
      <Scope>4</Scope>
      <OnDemand>0</OnDemand>
      <TriggerOnCreate>0</TriggerOnCreate>
      <TriggerOnDelete>0</TriggerOnDelete>
      <AsyncAutodelete>0</AsyncAutodelete>
      <SyncWorkflowLogOnFailure>0</SyncWorkflowLogOnFailure>
      <StateCode>1</StateCode>
      <StatusCode>2</StatusCode>
      <RunAs>1</RunAs>
      <IsTransacted>1</IsTransacted>
      <IntroducedVersion>1.0</IntroducedVersion>
      <IsCustomizable>1</IsCustomizable>
      <UIFlowType>2</UIFlowType>
      <IsCustomProcessingStepAllowedForOtherPublishers>1</IsCustomProcessingStepAllowedForOtherPublishers>
      <Metadata>{"clientversion":"2.46.163.24194","isvalid":true,"$schema":"https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#","schemaVersion":"ROBIN_20211012","containsActiveConnections":true,"containsGptPredictActions":false,"containsActiveCopilotActions":false,"containsActiveWorkQueuesActions":false,"containsActiveLogMessageActions":false,"multipleRequestsState":0,"scriptType":0,"disableScreenshotCaptureOnError":false,"missingUiElementRepairType":null,"flowTimeout":null}</Metadata>
      <Inputs>{"schema":{"required":["EstimateNo","ImageIdList","ReportPDFURL","IsUpdate","CurrentReportVersion","EncPwd","EncKey","LogFilePath","EmailTriggerURL"],"properties":{"EstimateNo":{"isOptional":false,"default":"","description":"Estimate Number From ServiceFusion","format":null,"title":"EstimateNo","type":"string","value":""},"ImageIdList":{"isOptional":false,"default":"","description":"Array of image Ids from sumoquote","format":null,"title":"ImageIdList","type":"array","value":"[\r\n]\r\n"},"ReportPDFURL":{"isOptional":false,"default":"","description":"URL for downloading Report PDF from SumoQuote","format":null,"title":"ReportPDFURL","type":"string","value":""},"IsUpdate":{"isOptional":false,"default":"","description":"Boolean variable to Check if it is sent after any update or sent for the first time ","format":null,"title":"IsReportUpdate","type":"boolean","value":"False"},"CurrentReportVersion":{"isOptional":false,"default":"","description":"Current version of SumoQuote Report sent to customer","format":null,"title":"CurrentReportVersion","type":"number","value":"1"},"EncPwd":{"isOptional":false,"default":"","description":"Encrypted Pwd For SF","format":"password","title":"EncPwd","type":"string","value":null},"EncKey":{"isOptional":false,"default":"","description":"Encryption Key","format":"password","title":"EncKey","type":"string","value":null},"LogFilePath":{"isOptional":false,"default":"","description":"Path For the log file from onedrive","format":null,"title":"LogFilePath","type":"string","value":""},"EmailTriggerURL":{"isOptional":false,"default":"","description":"URL For Sending Emails If any Error Occurs","format":null,"title":"EmailTriggerURL","type":"string","value":""}},"type":"object"}}</Inputs>
      <Outputs>{"schema":{"properties":{"Status":{"default":"","description":"Flow Status for current EstimateNo, to determine which steps have been completed so far.","format":null,"title":"Status","type":"string","value":null}},"type":"object"}}</Outputs>
      <Dependencies>{"childFlows":[],"workQueues":[],"environmentVariables":[],"requiredBinaries":["08677c35-83fc-4020-865e-327aecf9f932","80ba9000-24cc-47c4-981f-07cb305eb012","81260155-2451-4a05-ae58-fb68ef5b32e6","09326958-8302-4f46-ac5e-c37c472a668e"]}</Dependencies>
      <ConnectionReferences>[{"api":{"name":"/providers/Microsoft.PowerApps/apis/shared_onedrive"},"displayName":"OneDrive ServiceFusionAndSumoQuotesIntegration-0881d","isDisabled":false,"connectionReferenceLogicalName":"cr570_sharedonedrive_0881d","name":"shared-onedrive-ff471bfc-bc6b-4728-a0ed-a699f11e45b2","connectionDisplayName":"powerautomaterpa24@gmail.com","ownerId":null,"padInternalId":"df00fa62-7ee4-4329-9716-496611fab35f","isEmbedded":false}]</ConnectionReferences>
      <Definition>"@@ConnectionString: ''\r\n@@Type: 'Local'\r\n@@DesktopType: 'local'\r\n@@DisplayName: 'Local computer'\r\nIMPORT 'controlRepo.appmask' AS appmask\r\nIMPORT 'imageRepo.imgrepo' AS imgrepo\r\n@SENSITIVE: [EncPwd, EncKey, DecryptedPwdText]\r\n@INPUT EstimateNo : { 'Description': 'Estimate Number From ServiceFusion', 'FriendlyName': 'EstimateNo', 'Type': 'String', 'IsOptional': False, 'DefaultValue': '' } \r\n@OUTPUT Status : { 'Description': 'Flow Status for current EstimateNo, to determine which steps have been completed so far.', 'FriendlyName': 'Status', 'Type': 'String' } \r\n@INPUT ImageIdList : { 'Description': 'Array of image Ids from sumoquote', 'FriendlyName': 'ImageIdList', 'Type': 'List', 'IsOptional': False, 'DefaultValue': [] } \r\n@INPUT ReportPDFURL : { 'Description': 'URL for downloading Report PDF from SumoQuote', 'FriendlyName': 'ReportPDFURL', 'Type': 'String', 'IsOptional': False, 'DefaultValue': '' } \r\n@INPUT IsUpdate : { 'Description': 'Boolean variable to Check if it is sent after any update or sent for the first time ', 'FriendlyName': 'IsReportUpdate', 'Type': 'Bool', 'IsOptional': False, 'DefaultValue': False } \r\n@INPUT CurrentReportVersion : { 'Description': 'Current version of SumoQuote Report sent to customer', 'FriendlyName': 'CurrentReportVersion', 'Type': 'Numeric', 'IsOptional': False, 'DefaultValue': 1 } \r\n@INPUT EncPwd : { 'Description': 'Encrypted Pwd For SF', 'FriendlyName': 'EncPwd', 'Type': 'String', 'IsOptional': False, 'DefaultValue': '' } \r\n@INPUT EncKey : { 'Description': 'Encryption Key', 'FriendlyName': 'EncKey', 'Type': 'String', 'IsOptional': False, 'DefaultValue': '' } \r\n@INPUT LogFilePath : { 'Description': 'Path For the log file from onedrive', 'FriendlyName': 'LogFilePath', 'Type': 'String', 'IsOptional': False, 'DefaultValue': '' } \r\n@INPUT EmailTriggerURL : { 'Description': 'URL For Sending Emails If any Error Occurs', 'FriendlyName': 'EmailTriggerURL', 'Type': 'String', 'IsOptional': False, 'DefaultValue': '' } \r\nLogging.LogMessage Message: $'''Flow Started''' LogLevel: Logging.LogLevel.InfoLevel\r\nVariables.CreateNewDatatable InputTable: { ^['DateTime', 'FlowType', 'FlowName', 'Level', 'Message'], [$'''''', $'''''', $'''''', $'''''', $''''''] } DataTable=&gt; LogMessageTable\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Desktop Flow Started']\r\n# Logging End\r\nBLOCK 'Get Log File On Local'\r\nON BLOCK ERROR all\r\n    THROW ERROR\r\nEND\r\n    Folder.Create FolderPath: $'''C:\\\\EstimateInfoFiles''' FolderName: EstimateNo\r\n    # Get LogText File On Local\r\n    @@path: '%LogFilePath%'\r\n@@connectionDisplayName: 'OneDrive ServiceFusionAndSumoQuotesIntegration-0881d'\r\nExternal.InvokeCloudConnector Connection: 'df00fa62-7ee4-4329-9716-496611fab35f' ConnectorId: '/providers/Microsoft.PowerApps/apis/shared_onedrive' OperationId: 'GetFileContentByPath' @path: LogFilePath @inferContentType: True @GetFileContentByPathResponse=&gt; LogFileContent\r\n    File.GetPathPart File: LogFilePath FileName=&gt; LogFileName\r\n    File.ConvertFromBinary BinaryData: LogFileContent File: $'''/EstimateInfoFiles/%EstimateNo%/%LogFileName%''' IfFileExists: File.IfExists.Overwrite\r\nEND\r\n# variable to decide whether to send email to client or not\r\nSET SendToClient TO $'''False'''\r\nSET ClientAction TO $'''No Action'''\r\nSET EstimateSearchFailed TO False\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Downloading Files On Local - Started']\r\n# Logging End\r\n# Download All files on local from OneDrive\r\nBLOCK 'Download Files to local'\r\nON BLOCK ERROR all\r\n    SET SendToClient TO True\r\n    SET ClientAction TO $'''You may check if files are available in OneDrive'''\r\n    CALL 'subflow_Send Failure Email'\r\n    THROW ERROR\r\nEND\r\n    Logging.LogMessage Message: $'''Downloading all files from OneDrive to local started...''' LogLevel: Logging.LogLevel.InfoLevel\r\n    CALL 'subflow_Get All Files On Local and OneDrive'\r\n    Logging.LogMessage Message: $'''Downloading all files from OneDrive to local completed...''' LogLevel: Logging.LogLevel.InfoLevel\r\nEND\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Downloading Files On Local - Completed']\r\n# Logging End\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Starting Chrome Browser on Desktop']\r\n# Logging End\r\n# Launch Chrome and Open ServiceFusion\r\nBLOCK 'Launch Chrome'\r\nON BLOCK ERROR all\r\n    SET SendToClient TO False\r\n    CALL 'subflow_Send Failure Email'\r\n    THROW ERROR\r\nEND\r\n    Logging.LogMessage Message: $'''Launching chrome...''' LogLevel: Logging.LogLevel.InfoLevel\r\n    WebAutomation.LaunchChrome.LaunchChrome Url: $'''https://auth.servicefusion.com/auth/login''' WindowState: WebAutomation.BrowserWindowState.Maximized ClearCache: False ClearCookies: False WaitForPageToLoadTimeout: 60 Timeout: 60 PiPUserDataFolderMode: WebAutomation.PiPUserDataFolderModeEnum.AutomaticProfile BrowserInstance=&gt; Browser\r\n    WebAutomation.GetDetailsOfWebPage BrowserInstance: Browser DetailsType: WebAutomation.DetailsType.URLAddress Details=&gt; CurrentURL\r\n    Logging.LogMessage Message: $'''Chrome Started Successfully...''' LogLevel: Logging.LogLevel.InfoLevel\r\nEND\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Chrome Browser Started Successfully']\r\n# Logging End\r\n# If Session Not Already Exists\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Logging In to ServiceFusion']\r\n# Logging End\r\nBLOCK 'Login To Service Fusion'\r\nON BLOCK ERROR all\r\n    SET SendToClient TO True\r\n    SET ClientAction TO $'''Check if the login credentials not changed'''\r\n    CALL 'subflow_Send Failure Email'\r\n    GOTO 'Close Browser'\r\nEND\r\n    IF NotContains(CurrentURL, $'''https://admin.servicefusion.com/jobs''', False) THEN\r\n        Logging.LogMessage Message: $'''Process for Login To ServiceFusion Started....''' LogLevel: Logging.LogLevel.InfoLevel\r\n        CALL subflow_Login\r\n        WAIT 5\r\n        Logging.LogMessage Message: $'''Process for Login To ServiceFusion completed....''' LogLevel: Logging.LogLevel.InfoLevel\r\n    END\r\nEND\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Logged In To ServiceFusion']\r\n# Logging End\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Navigating to the Estimate Dashboard Page']\r\n# Logging End\r\nBLOCK 'Navigating to Estimate Dashboard Page'\r\nON BLOCK ERROR all\r\n    SET SendToClient TO False\r\n    CALL 'subflow_Send Failure Email'\r\n    GOTO 'Close Browser'\r\nEND\r\n    Logging.LogMessage Message: $'''navigating to Estimate Dashboard''' LogLevel: Logging.LogLevel.InfoLevel\r\n    WebAutomation.GoToWebPage.GoToWebPage BrowserInstance: Browser Url: $'''https://admin.servicefusion.com/estimate/estimateDashboard''' WaitForPageToLoadTimeout: 60\r\n    WebAutomation.GetDetailsOfWebPage BrowserInstance: Browser DetailsType: WebAutomation.DetailsType.URLAddress Details=&gt; CurrentURL\r\n    # When Logged In Successfully\r\n    IF NotContains(CurrentURL, $'''https://admin.servicefusion.com/estimate/estimateDashboard''', False) THEN\r\n        WebAutomation.GoToWebPage.GoToWebPage BrowserInstance: Browser Url: $'''https://admin.servicefusion.com/estimate/estimateDashboard''' WaitForPageToLoadTimeout: 60\r\n    END\r\n    Logging.LogMessage Message: $'''Reached to Estimate Dashboard Page...''' LogLevel: Logging.LogLevel.InfoLevel\r\nEND\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Estimate Dashboard Page Opened']\r\n# Logging End\r\n# Search and navigate to EstimateDetailsPage\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Searching for Estimate In: Status Requested']\r\n# Logging End\r\nBLOCK 'Search in Estimate Requested'\r\nON BLOCK ERROR all\r\n    SET EstimateSearchFailed TO True\r\n    CALL 'Get ScreenShot'\r\nEND\r\n    Logging.LogMessage Message: $'''Process for Searching for estimateNo in Estimate Requested started....''' LogLevel: Logging.LogLevel.InfoLevel\r\n    CALL 'subflow_Search in Estimate Requested'\r\n    Logging.LogMessage Message: $'''Process for Searching for estimateNo in Estimate Requested completed....''' LogLevel: Logging.LogLevel.InfoLevel\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Estimate Is Found In Status: Requested']\r\n    # Logging End\r\nEND\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Estimate Is Not Found In Estimate Requested']\r\n# Logging End\r\nBLOCK 'Search in Estimate Provided'\r\nON BLOCK ERROR all\r\n    SET EstimateSearchFailed TO True\r\n    CALL 'subflow_Send Failure Email'\r\n    GOTO 'Close Browser'\r\nEND\r\n    IF EstimateSearchFailed = True THEN\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Searching Estimate in Status: Provided']\r\n        # Logging End\r\n        Logging.LogMessage Message: $'''Process for Searching for estimateNo in Estimate Provided started....''' LogLevel: Logging.LogLevel.InfoLevel\r\n        CALL 'subflow_search In Estimate Provided'\r\n        Logging.LogMessage Message: $'''Process for Searching for estimateNo in Estimate Provided completed....''' LogLevel: Logging.LogLevel.InfoLevel\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Searching Estimate in Status: Provided - Completed']\r\n        # Logging End\r\n    END\r\nEND\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Image and PDF upload Started']\r\n# Logging End\r\nBLOCK 'Upload Image And PDF'\r\nON BLOCK ERROR all\r\n    SET ClientAction TO $'''You Can Resubmit the flow run for EstimateNo - %EstimateNo%'''\r\n    SET SendToClient TO True\r\n    CALL 'subflow_Send Failure Email'\r\n    GOTO 'Close Browser'\r\nEND\r\n    Logging.LogMessage Message: $'''Process For updating Images and PDF started...''' LogLevel: Logging.LogLevel.InfoLevel\r\n    CALL 'subflow_Upload Images And Doc'\r\n    Logging.LogMessage Message: $'''Process For updating Images and PDF completed...''' LogLevel: Logging.LogLevel.InfoLevel\r\nEND\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Image and PDF upload Completed']\r\n# Logging End\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Adding Quote Options Started']\r\n# Logging End\r\nBLOCK 'Add Estimate Options and Save Estimate'\r\nON BLOCK ERROR all\r\n    SET SendToClient TO True\r\n    SET ClientAction TO $'''Contact Support'''\r\n    CALL 'subflow_Send Failure Email'\r\n    GOTO 'Close Browser'\r\nEND\r\n    Logging.LogMessage Message: $'''Process For adding Estimate Options started started...''' LogLevel: Logging.LogLevel.InfoLevel\r\n    CALL 'subflow_Add Estimate Options'\r\n    Logging.LogMessage Message: $'''Process For adding Estimate Options started completed...''' LogLevel: Logging.LogLevel.InfoLevel\r\n    WebAutomation.Focus.Focus BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Button Save Estimate Bottom'] WaitForPageToLoadTimeout: 60\r\n    ON ERROR REPEAT 3 TIMES WAIT 2\r\n    ON ERROR\r\n\r\n    END\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Button Save Estimate Bottom'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: False WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    ON ERROR REPEAT 3 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n    END\r\n    Logging.LogMessage Message: $'''Estimate Saved after adding all estimate options..''' LogLevel: Logging.LogLevel.InfoLevel\r\n    Logging.LogMessage Message: $'''Process for deleting all files for current EstimateNo from local started...''' LogLevel: Logging.LogLevel.InfoLevel\r\n    Logging.LogMessage Message: $'''Process for deleting all files for current EstimateNo from local completed...''' LogLevel: Logging.LogLevel.InfoLevel\r\nEND\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Quote Options Added and Estimate Saved']\r\n# Logging End\r\nSET Status TO $'''SNTREPUPDT'''\r\nLABEL 'Close Browser'\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Logging Out From ServiceFusion']\r\n# Logging End\r\nLogging.LogMessage Message: $'''Logging Out From ServiceFusion...''' LogLevel: Logging.LogLevel.InfoLevel\r\nWebAutomation.GoToWebPage.GoToWebPage BrowserInstance: Browser Url: $'''https://admin.servicefusion.com/site/logout''' WaitForPageToLoadTimeout: 60\r\nON ERROR\r\n\r\nEND\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Logged Out From ServiceFusion']\r\n# Logging End\r\nLogging.LogMessage Message: $'''Logged Out From ServiceFusion...''' LogLevel: Logging.LogLevel.InfoLevel\r\nLogging.LogMessage Message: $'''Closing chrome browser...''' LogLevel: Logging.LogLevel.InfoLevel\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Closing Browser']\r\n# Logging End\r\nWebAutomation.CloseWebBrowser BrowserInstance: Browser\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Browser Closed and Desktop Flow Completed']\r\n# Logging End\r\nBLOCK 'Save Log File On OneDrive'\r\nON BLOCK ERROR all\r\n\r\nEND\r\n    File.WriteToCSVFile.WriteCSV VariableToWrite: LogMessageTable CSVFile: $'''/EstimateInfoFiles/%EstimateNo%/%LogFileName%''' CsvFileEncoding: File.CSVEncoding.UTF8 IncludeColumnNames: True IfFileExists: File.IfFileExists.Append ColumnsSeparator: File.CSVColumnsSeparator.SystemDefault\r\n    File.ConvertToBinary File: $'''C:/EstimateInfoFiles/%EstimateNo%/%LogFileName%''' BinaryData=&gt; UpdatedLogFileContent\r\n    @@folderPath: '/Logs/Report Send'\r\n@@connectionDisplayName: 'OneDrive ServiceFusionAndSumoQuotesIntegration-0881d'\r\nExternal.InvokeCloudConnector Connection: 'df00fa62-7ee4-4329-9716-496611fab35f' ConnectorId: '/providers/Microsoft.PowerApps/apis/shared_onedrive' OperationId: 'CreateFile' @folderPath: $'''/Logs/Report Send''' @name: LogFileName @body: UpdatedLogFileContent @CreateFileResponse=&gt; CreateFileResponse4\r\nEND\r\nFolder.Delete Folder: $'''C:/EstimateInfoFiles/%EstimateNo%'''\r\nON ERROR\r\n\r\nEND\r\nLogging.LogMessage Message: $'''Log File Saved And Flow Completed''' LogLevel: Logging.LogLevel.InfoLevel\r\nFUNCTION 'subflow_Upload Images And Doc' GLOBAL\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Pics Tab Link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: False WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    ON ERROR REPEAT 4 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n    END\r\n    # delete existing images first, if any\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Deleting Existing Images Started - If any']\r\n    # Logging End\r\n    WebAutomation.ExecuteJavascript BrowserInstance: Browser Javascript: $'''function ExecuteScript()\r\n{   \r\n\ttry\r\n    {\r\n        var obj = {\\\"result\\\":\\\"Image deletion function started....\\\"};\r\n        let delBtns = document.querySelectorAll(\\\"div.job-images-thumbnail-image button.btn-delete-image\\\");\r\n        var i=1;\r\n        delBtns.forEach(btn=&gt;{\r\n            \r\n            btn.click();\r\n        \r\n\r\n            setTimeout(()=&gt;{\r\n                let yesBtn  = document.querySelector(\\\"div.jquery-msgbox-buttons button\\\");\r\n                if(yesBtn!=null){\r\n                    yesBtn.click();\r\n                    console.log(\\\"deleted image - \\\"+i);\r\n                }\r\n            }, 1000*i++);\r\n            \r\n        });\r\n\r\n        return JSON.stringify(obj);\r\n    }\r\n    catch(error){\r\n        obj[\\\"result\\\"] = \\\"Failed to delete image. Error:- \\\"+error;\r\n    }\r\n\r\n    return JSON.stringify(obj);\r\n    \r\n\r\n}''' Result=&gt; ResultJSDeleteImages\r\n    WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElementInState BrowserInstance: Browser Control: appmask['Estimate Details Page']['Text Nothing to display'] State: WebAutomation.ElementState.Enabled) FOR 30 \r\n    ON ERROR\r\n\r\n    END\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Deleting Existing Images Completed- If any']\r\n    # Logging End\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Upload Pictures Button'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: False WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    ON ERROR REPEAT 4 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n    END\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Uploading Images - Started']\r\n    # Logging End\r\n    # Upload Inspection Images\r\n    LOOP FOREACH CurrentLocalImageFilePath IN ImagePathList\r\n        WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Add Files Link Image Upload Modal'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n        ON ERROR REPEAT 4 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n        END\r\n        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: CurrentLocalImageFilePath DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n    END\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Start upload Link Image Modal'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElementInState BrowserInstance: Browser Control: appmask['Estimate Details Page']['Add Files Link Image Upload Modal'] State: WebAutomation.ElementState.Enabled) FOR 600 \r\n    ON ERROR\r\n\r\n    END\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Button \\'×\\' Image Upload Modal Dismiss'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: False WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Uploading Images Completed']\r\n    # Logging End\r\n    # add comment on each image\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Adding Comment To Images Started']\r\n    # Logging End\r\n    SET CurrentCommentIndex TO 0\r\n    LOOP FOREACH CurrentItem IN ImageIdList\r\n        WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Add Comment Link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: False WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n        Text.Replace Text: CurrentItem['comment'] TextToFind: $'''\\\\n''' IsRegEx: False IgnoreCase: True ReplaceWith: $'''\\\\n''' ActivateEscapeSequences: True Result=&gt; ReplacedCommentText\r\n        Clipboard.Clear _\r\n        Clipboard.SetText Text: ReplacedCommentText\r\n        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({V})''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Tab}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n        Variables.IncreaseVariable Value: CurrentCommentIndex IncrementValue: 1\r\n        WAIT 1\r\n    END\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Adding Comment To Images Completed']\r\n    # Logging End\r\n    # Upload PDF File\r\n    Folder.GetFiles Folder: $'''%LocalPath%\\\\%EstimateNo%''' FileFilter: $'''*%CurrentReportVersion%.pdf''' IncludeSubfolders: False FailOnAccessDenied: True SortBy1: Folder.SortBy.NoSort SortDescending1: False SortBy2: Folder.SortBy.NoSort SortDescending2: False SortBy3: Folder.SortBy.NoSort SortDescending3: False Files=&gt; PDFReportFile\r\n    IF PDFReportFile.Count &gt; 0 THEN\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Uploading PDF Report Started']\r\n        # Logging End\r\n        WebAutomation.Focus.Focus BrowserInstance: Browser Control: appmask['Estimate Details Page']['JOBID'] WaitForPageToLoadTimeout: 60\r\n        WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Docs Tab Link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: False WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n        WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElementInState BrowserInstance: Browser Control: appmask['Estimate Details Page']['Upload New Doc Button'] State: WebAutomation.ElementState.Enabled) FOR 3 \r\n        ON ERROR\r\n\r\n        END\r\n        WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Upload New Doc Button'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: False WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n        ON ERROR REPEAT 1 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n        END\r\n        WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Add files Link Doc Upload Modal'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n        ON ERROR REPEAT 4 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n        END\r\n        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: PDFReportFile[0].FullName DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n        WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Start Doc Upload Link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n        ON ERROR REPEAT 4 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n        END\r\n        WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElementInState BrowserInstance: Browser Control: appmask['Estimate Details Page']['Add files Link Doc Upload Modal'] State: WebAutomation.ElementState.Enabled) FOR 300 \r\n        ON ERROR\r\n\r\n        END\r\n        WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Button \\'×\\' Doc Upload Modal Dismiss'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: False WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n        ON ERROR REPEAT 4 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n        END\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Uploading PDF Report Completed']\r\n        # Logging End\r\n    ELSE\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Report PDF Is Not Found On Local, Could Not Upload On ServiceFusion']\r\n        # Logging End\r\n    END\r\nEND FUNCTION\r\nFUNCTION 'subflow_Get All Files On Local and OneDrive' GLOBAL\r\n    SET ImageNo TO 1\r\n    SET ImageExt TO $'''\\'\\''''\r\n    SET LocalPath TO $'''C:\\\\EstimateInfoFiles'''\r\n    Variables.CreateNewList List=&gt; ImagePathList\r\n    IF (Folder.IfFolderExists.DoesNotExist Path: $'''%LocalPath%\\\\%EstimateNo%''') THEN\r\n        Folder.Create FolderPath: $'''C:\\\\EstimateInfoFiles''' FolderName: EstimateNo\r\n    END\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Downloading Images From SumoQuote - Started']\r\n    # Logging End\r\n    # Download images from sumoquote and upload to onedrive\r\n    SET SkipFlag TO False\r\n    LOOP FOREACH CurrentImageData IN ImageIdList\r\n        Text.SplitText.SplitWithDelimiter Text: CurrentImageData['ImageId'] CustomDelimiter: $'''.''' IsRegEx: False Result=&gt; TextList\r\n        SET ImageExt TO TextList[TextList.Count - 1]\r\n        Web.DownloadFromWeb.DownloadToFile Url: $'''https://internal.sumoquote.com/api/v1/download/image/?id=%CurrentImageData['ImageId']%''' FilePath: $'''%LocalPath%\\\\%EstimateNo%\\\\%EstimateNo + '_ image_' + ImageNo + '.' + ImageExt%''' ConnectionTimeout: 30 FollowRedirection: True ClearCookies: False UserAgent: $'''Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.21) Gecko/20100312 Firefox/3.6''' Encoding: Web.Encoding.AutoDetect AcceptUntrustedCertificates: False DownloadedFile=&gt; DownloadedFile\r\n        ON ERROR REPEAT 2 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n        ON ERROR\r\n            SET SkipFlag TO True\r\n        END\r\n        IF SkipFlag = True THEN\r\n            NEXT LOOP\r\n        END\r\n        Variables.AddItemToList Item: DownloadedFile.FullName List: ImagePathList\r\n        Variables.IncreaseVariable Value: ImageNo IncrementValue: 1\r\n        SET EstimateInfoFilePath TO $'''%EstimateNo%/%DownloadedFile.Name%'''\r\n        File.ConvertToBinary File: DownloadedFile BinaryData=&gt; BinaryData\r\n        @@folderPath: '/EstimateInfo/%EstimateNo%'\r\n@@connectionDisplayName: 'OneDrive ServiceFusionAndSumoQuotesIntegration-0881d'\r\nExternal.InvokeCloudConnector Connection: 'df00fa62-7ee4-4329-9716-496611fab35f' ConnectorId: '/providers/Microsoft.PowerApps/apis/shared_onedrive' OperationId: 'CreateFile' @folderPath: $'''/EstimateInfo/%EstimateNo%''' @name: DownloadedFile.Name @body: BinaryData @CreateFileResponse=&gt; CreateFileResponse\r\n    END\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Downloading Images from SumoQuote - Completed']\r\n    # Logging End\r\n    # Download SumoQuote Report PDF\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Downloading Report PDF from SumoQuote - Started']\r\n    # Logging End\r\n    IF IsUpdate = True THEN\r\n        Variables.IncreaseVariable Value: CurrentReportVersion IncrementValue: 1\r\n    END\r\n    # download report pdf\r\n    Web.DownloadFromWeb.DownloadToFile Url: ReportPDFURL FilePath: $'''%LocalPath%\\\\%EstimateNo%\\\\%EstimateNo + '_ SQ_SentReport_V' + CurrentReportVersion + '.pdf'%''' ConnectionTimeout: 30 FollowRedirection: True ClearCookies: False UserAgent: $'''Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.21) Gecko/20100312 Firefox/3.6''' Encoding: Web.Encoding.AutoDetect AcceptUntrustedCertificates: False DownloadedFile=&gt; DownloadedPDF\r\n    ON ERROR REPEAT 2 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n    END\r\n    File.ConvertToBinary File: DownloadedPDF BinaryData=&gt; PDFBinaryData\r\n    @@folderPath: '/EstimateInfo/%EstimateNo%'\r\n@@connectionDisplayName: 'OneDrive ServiceFusionAndSumoQuotesIntegration-0881d'\r\nExternal.InvokeCloudConnector Connection: 'df00fa62-7ee4-4329-9716-496611fab35f' ConnectorId: '/providers/Microsoft.PowerApps/apis/shared_onedrive' OperationId: 'CreateFile' @folderPath: $'''/EstimateInfo/%EstimateNo%''' @name: DownloadedPDF.Name @body: PDFBinaryData @CreateFileResponse=&gt; CreateFileResponse2\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Downloading Report PDF from SumoQuote - Completed']\r\n    # Logging End\r\n    # Download all csv files from one drive\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Downloading CSV files from OneDrive - Started']\r\n    # Logging End\r\n    @@path: '/EstimateInfo/%EstimateNo%'\r\n@@connectionDisplayName: 'OneDrive ServiceFusionAndSumoQuotesIntegration-0881d'\r\nExternal.InvokeCloudConnector Connection: 'df00fa62-7ee4-4329-9716-496611fab35f' ConnectorId: '/providers/Microsoft.PowerApps/apis/shared_onedrive' OperationId: 'FindFilesByPath' @query: $'''.*\\\\.csv''' @path: $'''/EstimateInfo/%EstimateNo%''' @findMode: $'''Pattern''' @maxFileCount: 10 @FindFilesByPathResponse=&gt; FindFilesByPathResponse\r\n    LOOP FOREACH CurrentCSVFileInfo IN FindFilesByPathResponse\r\n        @@id: '%CurrentCSVFileInfo.Id%'\r\n@@connectionDisplayName: 'OneDrive ServiceFusionAndSumoQuotesIntegration-0881d'\r\nExternal.InvokeCloudConnector Connection: 'df00fa62-7ee4-4329-9716-496611fab35f' ConnectorId: '/providers/Microsoft.PowerApps/apis/shared_onedrive' OperationId: 'GetFileContent' @id: CurrentCSVFileInfo.Id @inferContentType: True @GetFileContentResponse=&gt; GetFileContentResponse\r\n        File.ConvertFromBinary BinaryData: GetFileContentResponse File: $'''%LocalPath%\\\\%EstimateNo%\\\\%CurrentCSVFileInfo.Name%''' IfFileExists: File.IfExists.Overwrite\r\n    END\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Downloading CSV files from OneDrive - Completed']\r\n    # Logging End\r\nEND FUNCTION\r\nFUNCTION subflow_Login GLOBAL\r\n    WebAutomation.PopulateTextField.PopulateTextFieldUsePhysicalKeyboard BrowserInstance: Browser Control: appmask['Login Page']['CompanyId Input'] Text: $'''mrgutterinc''' Mode: WebAutomation.PopulateTextMode.Replace UnfocusAfterPopulate: True WaitForPageToLoadTimeout: 60\r\n    WebAutomation.PopulateTextField.PopulateTextFieldUsePhysicalKeyboard BrowserInstance: Browser Control: appmask['Login Page']['UserId Input'] Text: $'''erikhbc''' Mode: WebAutomation.PopulateTextMode.Replace UnfocusAfterPopulate: True WaitForPageToLoadTimeout: 60\r\n    Cryptography.DecryptText.DecryptTextWithAES Encoding: Cryptography.EncryptionEncoding.Unicode TextToDecrypt: EncPwd DecryptionKey: EncKey Padding: Cryptography.PaddingMode.PKCS7 KeySize: Cryptography.AESKeySize.Bits256 DecryptedText=&gt; DecryptedPwdText\r\n    WebAutomation.PopulateTextField.PopulateTextFieldUsePhysicalKeyboard BrowserInstance: Browser Control: appmask['Login Page']['Password Input'] Text: DecryptedPwdText Mode: WebAutomation.PopulateTextMode.Replace UnfocusAfterPopulate: True WaitForPageToLoadTimeout: 60\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Login Page']['Button \\'Sign In\\''] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\nEND FUNCTION\r\nFUNCTION 'subflow_Send Failure Email' GLOBAL\r\n    CALL 'Get ScreenShot'\r\n    ERROR =&gt; LastError Reset: True\r\n    BLOCK 'Save Log File '\r\nON BLOCK ERROR all\r\n\r\nEND\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Error', 'In SubFlow:  ' + LastError.SubflowName + ',  In Action:  ' + LastError.ActionName + ',  Error:  ' + LastError.Message]\r\n        # Logging End\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Error', 'Sending Emails With Error Message']\r\n        # Logging End\r\n        File.WriteToCSVFile.WriteCSV VariableToWrite: LogMessageTable CSVFile: $'''/EstimateInfoFiles/%EstimateNo%/%LogFileName%''' CsvFileEncoding: File.CSVEncoding.UTF8 IncludeColumnNames: True IfFileExists: File.IfFileExists.Append ColumnsSeparator: File.CSVColumnsSeparator.SystemDefault\r\n        File.ConvertToBinary File: $'''C:/EstimateInfoFiles/%EstimateNo%/%LogFileName%''' BinaryData=&gt; UpdatedLogFileContent\r\n        @@folderPath: '/Logs/Report Send'\r\n@@connectionDisplayName: 'OneDrive ServiceFusionAndSumoQuotesIntegration-0881d'\r\nExternal.InvokeCloudConnector Connection: 'df00fa62-7ee4-4329-9716-496611fab35f' ConnectorId: '/providers/Microsoft.PowerApps/apis/shared_onedrive' OperationId: 'CreateFile' @folderPath: $'''/Logs/Report Send''' @name: LogFileName @body: UpdatedLogFileContent @CreateFileResponse=&gt; CreateFileResponse4\r\n    END\r\n    Text.Replace Text: LastError.Message TextToFind: $'''\\\"|\\\\\\\\|\\'|\\\\\\\\|\\\\/''' IsRegEx: True IgnoreCase: False ReplaceWith: $'''%''%''' ActivateEscapeSequences: False Result=&gt; FormattedLastError\r\n    Text.Replace Text: ClientAction TextToFind: $'''\\\"|\\\\\\\\|\\'|\\\\\\\\|\\\\/''' IsRegEx: True IgnoreCase: False ReplaceWith: $'''%''%''' ActivateEscapeSequences: False Result=&gt; FormattedClientActionText\r\n    IF SendToClient = True THEN\r\n        # send email to client\r\n        Web.InvokeWebService.InvokeWebService Url: EmailTriggerURL Method: Web.Method.Post Accept: $'''application/json''' ContentType: $'''application/json''' RequestBody: $'''{\r\n\\\"flowtype\\\":\\\"desktop flow\\\",\r\n\\\"emailtype\\\":\\\"client\\\",\r\n \\\"supportEmailContent\\\":{},\r\n  \\\"clientEmailContent\\\":{\r\n        \\\"estimateNo\\\":\\\"%EstimateNo%\\\",\r\n        \\\"error\\\":\\\"%FormattedLastError%\\\",\r\n        \\\"action\\\":\\\"%FormattedClientActionText%\\\",\r\n        }\r\n}''' ConnectionTimeout: 30 FollowRedirection: True ClearCookies: False FailOnErrorStatus: False EncodeRequestBody: False UserAgent: $'''Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.21) Gecko/20100312 Firefox/3.6''' Encoding: Web.Encoding.AutoDetect AcceptUntrustedCertificates: False Response=&gt; WebServiceResponseClient StatusCode=&gt; StatusCodeClient\r\n        ON ERROR REPEAT 3 TIMES WAIT 3 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n        END\r\n    END\r\n    # send email to support\r\n    Web.InvokeWebService.InvokeWebService Url: EmailTriggerURL Method: Web.Method.Post Accept: $'''application/json''' ContentType: $'''application/json''' RequestBody: $'''{\r\n\\\"flowtype\\\":\\\"desktop flow\\\",\r\n\\\"emailtype\\\":\\\"support\\\",\r\n \\\"supportEmailContent\\\":{\r\n    \\\"flowName\\\": \\\"updt sent report details on SF - %LastError.SubflowName%\\\",\r\n     \\\"failedAction\\\": \\\"%LastError.ActionName%\\\",\r\n      \\\"failureMessage\\\": \\\"%FormattedLastError%\\\",\r\n       \\\"flowRunURL\\\":\\\"#\\\",\r\n       \\\"SSFileName\\\":\\\"%SSPath%\\\",\r\n      \\\"EstimateNo\\\":\\\"%EstimateNo%\\\",\r\n      \\\"LogFilePath\\\":\\\"%LogFilePath%\\\"\r\n      },\r\n  \\\"clientEmailContent\\\":{}\r\n}''' ConnectionTimeout: 30 FollowRedirection: True ClearCookies: False FailOnErrorStatus: False EncodeRequestBody: False UserAgent: $'''Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.21) Gecko/20100312 Firefox/3.6''' Encoding: Web.Encoding.AutoDetect AcceptUntrustedCertificates: False Response=&gt; WebServiceResponseSupport StatusCode=&gt; StatusCodeSupport\r\n    ON ERROR REPEAT 3 TIMES WAIT 3 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n    END\r\nEND FUNCTION\r\nFUNCTION 'subflow_Add Estimate Options' GLOBAL\r\n    # Add Estimate Options\r\n    SET LocalPath TO $'''C:\\\\EstimateInfoFiles'''\r\n    Folder.GetFiles Folder: $'''%LocalPath%\\\\%EstimateNo%''' FileFilter: $'''Tier1.csv;Tier2.csv;Tier3.csv;additionalOpt.csv''' IncludeSubfolders: False FailOnAccessDenied: True SortBy1: Folder.SortBy.NoSort SortDescending1: False SortBy2: Folder.SortBy.NoSort SortDescending2: False SortBy3: Folder.SortBy.NoSort SortDescending3: False Files=&gt; EstimateCSVFiles\r\n    SET CurrentEstimateOptionNo TO 1\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Edit Estimate Link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: False WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    ON ERROR REPEAT 2 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n    END\r\n    IF (WebAutomation.IfWebPageContains.WebPageContainsElementInState BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Button Save Estimate Top'] State: WebAutomation.ElementState.Enabled) THEN\r\n        LOOP FOREACH CurrentEstimateCSV IN EstimateCSVFiles\r\n            File.ReadFromCSVFile.ReadCSV CSVFile: CurrentEstimateCSV.FullName Encoding: File.CSVEncoding.UTF8 TrimFields: True FirstLineContainsColumnNames: True ColumnsSeparator: File.CSVColumnsSeparator.SystemDefault CSVTable=&gt; CSVTable\r\n            SET CurrentLineItemIndex TO 0\r\n            IF CSVTable.RowsCount &gt; 0 THEN\r\n                # Logging Start\r\n                DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n                Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Adding Quote Options For - ' + CSVTable[0]['TierName'] + ' started']\r\n                # Logging End\r\n                WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Estimate Option Tab'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: False WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n                ON ERROR REPEAT 4 TIMES WAIT 2\r\n                END\r\n                # rename the estmate options with quote option names from SumoQuote\r\n                WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Estimate Option Dropdown Icon'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: False WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n                WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Estimate Option Rename Link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: False WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n                MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({A})''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n                MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: CSVTable[0]['TierName'] DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n                MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n                # Delete LineItems If Already Exists\r\n                WebAutomation.ExecuteJavascript BrowserInstance: Browser Javascript: $'''function ExecuteScript()\r\n{\r\n \tvar obj = {\r\n            \\\"runStatus\\\":\\\"started deleting line items for Estimate Option No - %CurrentEstimateOptionNo%\\\"\r\n        }\r\n    try\r\n    {\r\n       \r\n        let DeleteLinkForlineItems = document.querySelectorAll(\\\"a[onClick=\\'deleteProductRow_sub_estimate(event,%CurrentEstimateOptionNo%)\\'], a[onClick=\\'deleteServiceRow_sub_estimate(event,%CurrentEstimateOptionNo%)\\']\\\")\r\n\r\n        DeleteLinkForlineItems.forEach(deleteLink=&gt;{\r\n            deleteLink.click();\r\n\r\n        });\r\n\r\n\r\n        obj = {\r\n            \\\"runStatus\\\":\\\"ran successfully for Estimate Option No - %CurrentEstimateOptionNo%\\\"\r\n        }\r\n    }\r\n    catch\r\n    {\r\n        obj = {\r\n            \\\"runStatus\\\":\\\"run failed for Estimate Option No - %CurrentEstimateOptionNo%\\\"\r\n        }\r\n    }\r\n    \r\n    return JSON.stringify(obj)\r\n    \r\n}''' Result=&gt; JSRunResultDeleteLineItems\r\n                WAIT 2\r\n                # add LineItems for current estimate option\r\n                LOOP FOREACH CurrentLineItem IN CSVTable\r\n                    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Product/Service Search Input For Line Item'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: False WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n                    ON ERROR REPEAT 4 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n                    END\r\n                    SET LineItemsAddAttempt TO 0\r\n                    LABEL RetryLineItemAdd\r\n                    IF LineItemsAddAttempt &lt; 3 THEN\r\n                        Variables.IncreaseVariable Value: LineItemsAddAttempt IncrementValue: 1\r\n                        WebAutomation.PopulateTextField.PopulateTextField BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Product/Service Search Input For Line Item'] Text: CurrentLineItem['Name'] Mode: WebAutomation.PopulateTextMode.Replace EmulateTyping: True UnfocusAfterPopulate: False WaitForPageToLoadTimeout: 60\r\n                        WAIT 2\r\n                        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Down}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n                        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n                        WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElement BrowserInstance: Browser Control: appmask['Estimate Edit Page']['CurrentEstimate Qty Input']) FOR 5 \r\n                        ON ERROR\r\n                            GOTO RetryLineItemAdd\r\n                        END\r\n                        WebAutomation.PopulateTextField.PopulateTextFieldUsePhysicalKeyboard BrowserInstance: Browser Control: appmask['Estimate Edit Page']['CurrentEstimate Qty Input'] Text: CurrentLineItem['Qty'] Mode: WebAutomation.PopulateTextMode.Replace UnfocusAfterPopulate: False WaitForPageToLoadTimeout: 60\r\n                        ON ERROR REPEAT 3 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n                        END\r\n                        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Tab}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n                        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: CurrentLineItem['Price'] DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n                        Variables.IncreaseVariable Value: CurrentLineItemIndex IncrementValue: 1\r\n                    ELSE\r\n                        SET SendToClient TO True\r\n                        SET ClientAction TO $'''LineItem Not Found In Search:\r\nAdd LineItem Under EstimateOption %CSVTable[0]['TierName']%:\r\nName: %CurrentLineItem['Name']%,\r\nDescription: %CurrentLineItem['Description']%\r\n'''\r\n                        CALL 'subflow_Send Failure Email'\r\n                    END\r\n                END\r\n            END\r\n            Variables.IncreaseVariable Value: CurrentEstimateOptionNo IncrementValue: 1\r\n            IF CurrentEstimateOptionNo &lt;= EstimateCSVFiles.Count THEN\r\n                IF (WebAutomation.IfWebPageContains.WebPageDoesNotContainElement BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Estimate Option Tab']) THEN\r\n                    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Add Option Button'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: False WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n                    ON ERROR REPEAT 3 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n                    END\r\n                END\r\n            END\r\n            # Logging Start\r\n            DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n            Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Adding Quote Options For - ' + CSVTable[0]['TierName'] + ' Completed']\r\n            # Logging End\r\n        END\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Changing the status to Estimate Provided']\r\n        # Logging End\r\n        # Change Status to Estimate Provided\r\n        WebAutomation.Focus.Focus BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Button Save Estimate Top'] WaitForPageToLoadTimeout: 60\r\n        WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Current Status Dropdown'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''Estimate Provided''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Estimate Status Changed To Estimate Provided']\r\n        # Logging End\r\n    ELSE\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Failed to reach to the Estimate edit page']\r\n        # Logging End\r\n    END\r\nEND FUNCTION\r\nFUNCTION 'subflow_Search in Estimate Requested' GLOBAL\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Waiting For Status -Estimate Requested Link to Load On WebPage']\r\n    # Logging End\r\n    WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElement BrowserInstance: Browser Control: appmask['Estimate Dashboard']['Status Estimate Requested Link']) FOR 30 \r\n    ON ERROR\r\n        REPEAT ACTION\r\n    END\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Status - Requested Link Loaded']\r\n    # Logging End\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Dashboard']['Status Estimate Requested Link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: False WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    ON ERROR REPEAT 3 TIMES WAIT 2\r\n    END\r\n    WAIT 2\r\n    WebAutomation.PopulateTextField.PopulateTextField BrowserInstance: Browser Control: appmask['Estimate Dashboard']['Estimate Search Input'] Text: EstimateNo Mode: WebAutomation.PopulateTextMode.Replace EmulateTyping: True UnfocusAfterPopulate: True WaitForPageToLoadTimeout: 60\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Waiting for Search Results']\r\n    # Logging End\r\n    WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElement BrowserInstance: Browser Control: appmask['Estimate Dashboard']['Top Result link']) FOR 3\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Search Result Loaded']\r\n    # Logging End\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Dashboard']['Top Result link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: False WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    ON ERROR REPEAT 2 TIMES WAIT 1 RetryType: RetryType.Exponential MinInterval: 1 MaxInterval: 360\r\n    END\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Click On Matched Search Result Successfull']\r\n    # Logging End\r\nEND FUNCTION\r\nFUNCTION 'subflow_search in Estimate Provided' GLOBAL\r\n    WebAutomation.GoToWebPage.GoToWebPage BrowserInstance: Browser Url: $'''https://admin.servicefusion.com/estimate/estimateDashboard''' WaitForPageToLoadTimeout: 60\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Waiting For Status -Estimate Provied Link to Load On WebPage']\r\n    # Logging End\r\n    WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElement BrowserInstance: Browser Control: appmask['Estimate Dashboard']['Status Estimate Provided Link']) FOR 30 \r\n    ON ERROR REPEAT 2 TIMES WAIT 2\r\n    END\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Status - Provided Link Loaded']\r\n    # Logging End\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Dashboard']['Status Estimate Provided Link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: False WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    ON ERROR REPEAT 3 TIMES WAIT 2\r\n    END\r\n    WAIT 2\r\n    WebAutomation.PopulateTextField.PopulateTextField BrowserInstance: Browser Control: appmask['Estimate Dashboard']['Estimate Search Input'] Text: EstimateNo Mode: WebAutomation.PopulateTextMode.Replace EmulateTyping: True UnfocusAfterPopulate: True WaitForPageToLoadTimeout: 60\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Waiting for Search Results']\r\n    # Logging End\r\n    WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElement BrowserInstance: Browser Control: appmask['Estimate Dashboard']['Top Result link']) FOR 3\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Search Result Loaded']\r\n    # Logging End\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Dashboard']['Top Result link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: False WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    ON ERROR REPEAT 2 TIMES WAIT 1 RetryType: RetryType.Exponential MinInterval: 1 MaxInterval: 120\r\n    END\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'updt sent report on SF', 'Info', 'Click On Matched Search Result Successfull']\r\n    # Logging End\r\nEND FUNCTION\r\nFUNCTION 'Get ScreenShot' GLOBAL\r\n    SET SSPath TO $'''\\'\\''''\r\n    BLOCK 'Take ScreenShot and upload to onedrive'\r\nON BLOCK ERROR all\r\n    NEXT ACTION\r\nEND\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; CurrentDateTime\r\n        Text.ConvertDateTimeToText.FromCustomDateTime DateTime: CurrentDateTime CustomFormat: $'''yyyy_MM_dd_T_HH_mm_ss''' Result=&gt; FormattedDateTime\r\n        Workstation.TakeScreenshot.TakeScreenshotAndSaveToFile File: $'''C:\\\\EstimateInfoFiles\\\\%EstimateNo%\\\\error_%FormattedDateTime%.png''' ImageFormat: System.ImageFormat.Png\r\n        File.ConvertToBinary File: $'''C:\\\\EstimateInfoFiles\\\\%EstimateNo%\\\\error_%FormattedDateTime%.png''' BinaryData=&gt; SSImageBinary\r\n        @@folderPath: '/ErrorSS/%EstimateNo%'\r\n@@connectionDisplayName: 'OneDrive ServiceFusionAndSumoQuotesIntegration-0881d'\r\nExternal.InvokeCloudConnector Connection: 'df00fa62-7ee4-4329-9716-496611fab35f' ConnectorId: '/providers/Microsoft.PowerApps/apis/shared_onedrive' OperationId: 'CreateFile' @folderPath: $'''/ErrorSS/%EstimateNo%''' @name: $'''error_EN_%EstimateNo%_%FormattedDateTime%.png''' @body: SSImageBinary @CreateFileResponse=&gt; CreateFileResponse3\r\n        SET SSPath TO $'''error_EN_%EstimateNo%_%FormattedDateTime%.png'''\r\n    END\r\nEND FUNCTION\r\n"</Definition>
      <SchemaVersion>2022.07</SchemaVersion>
      <DesktopFlowModules>[]</DesktopFlowModules>
      <PrimaryEntity>none</PrimaryEntity>
      <LocalizedNames>
        <LocalizedName languagecode="1033" description="updt sent report details on SF" />
      </LocalizedNames>
    </Workflow>
    <Workflow WorkflowId="{a5b95d55-ba2f-ef11-8e4e-000d3ac9b1d6}" Name="Update Sent Report Details on ServiceFusion">
      <JsonFileName>/Workflows/UpdateSentReportDetailsonServiceFusion-A5B95D55-BA2F-EF11-8E4E-000D3AC9B1D6.json</JsonFileName>
      <Type>1</Type>
      <Subprocess>0</Subprocess>
      <Category>5</Category>
      <Mode>0</Mode>
      <Scope>4</Scope>
      <OnDemand>0</OnDemand>
      <TriggerOnCreate>0</TriggerOnCreate>
      <TriggerOnDelete>0</TriggerOnDelete>
      <AsyncAutodelete>0</AsyncAutodelete>
      <SyncWorkflowLogOnFailure>0</SyncWorkflowLogOnFailure>
      <StateCode>1</StateCode>
      <StatusCode>2</StatusCode>
      <RunAs>1</RunAs>
      <IsTransacted>1</IsTransacted>
      <IntroducedVersion>1.0.0.0</IntroducedVersion>
      <IsCustomizable>1</IsCustomizable>
      <IsCustomProcessingStepAllowedForOtherPublishers>1</IsCustomProcessingStepAllowedForOtherPublishers>
      <PrimaryEntity>none</PrimaryEntity>
      <LocalizedNames>
        <LocalizedName languagecode="1033" description="Update Sent Report Details on ServiceFusion" />
      </LocalizedNames>
    </Workflow>
    <Workflow WorkflowId="{91699338-c72f-ef11-8e4e-000d3ac9b1d6}" Name="FetchLatestEstimates">
      <JsonFileName>/Workflows/FetchLatestEstimates-91699338-C72F-EF11-8E4E-000D3AC9B1D6.json</JsonFileName>
      <Type>1</Type>
      <Subprocess>0</Subprocess>
      <Category>5</Category>
      <Mode>0</Mode>
      <Scope>4</Scope>
      <OnDemand>0</OnDemand>
      <TriggerOnCreate>0</TriggerOnCreate>
      <TriggerOnDelete>0</TriggerOnDelete>
      <AsyncAutodelete>0</AsyncAutodelete>
      <SyncWorkflowLogOnFailure>0</SyncWorkflowLogOnFailure>
      <StateCode>1</StateCode>
      <StatusCode>2</StatusCode>
      <RunAs>1</RunAs>
      <IsTransacted>1</IsTransacted>
      <IntroducedVersion>1.0.0.0</IntroducedVersion>
      <IsCustomizable>1</IsCustomizable>
      <IsCustomProcessingStepAllowedForOtherPublishers>1</IsCustomProcessingStepAllowedForOtherPublishers>
      <PrimaryEntity>none</PrimaryEntity>
      <LocalizedNames>
        <LocalizedName languagecode="1033" description="FetchLatestEstimates" />
      </LocalizedNames>
    </Workflow>
    <Workflow WorkflowId="{e3169d51-a93a-ef11-a316-000d3ac9b1d6}" Name="Send Email To Client/Support">
      <JsonFileName>/Workflows/SendEmailToClientSupport-E3169D51-A93A-EF11-A316-000D3AC9B1D6.json</JsonFileName>
      <Type>1</Type>
      <Subprocess>0</Subprocess>
      <Category>5</Category>
      <Mode>0</Mode>
      <Scope>4</Scope>
      <OnDemand>0</OnDemand>
      <TriggerOnCreate>0</TriggerOnCreate>
      <TriggerOnDelete>0</TriggerOnDelete>
      <AsyncAutodelete>0</AsyncAutodelete>
      <SyncWorkflowLogOnFailure>0</SyncWorkflowLogOnFailure>
      <StateCode>1</StateCode>
      <StatusCode>2</StatusCode>
      <RunAs>1</RunAs>
      <IsTransacted>1</IsTransacted>
      <IntroducedVersion>1.0.0.0</IntroducedVersion>
      <IsCustomizable>1</IsCustomizable>
      <IsCustomProcessingStepAllowedForOtherPublishers>1</IsCustomProcessingStepAllowedForOtherPublishers>
      <PrimaryEntity>none</PrimaryEntity>
      <LocalizedNames>
        <LocalizedName languagecode="1033" description="Send Email To Client/Support" />
      </LocalizedNames>
    </Workflow>
    <Workflow WorkflowId="{0f8f52ec-b09d-4893-bd44-27799e5cfab0}" Name="convert to job and send email_sms flow">
      <JsonFileName>/Workflows/converttojobandsendemail_smsflow-0F8F52EC-B09D-4893-BD44-27799E5CFAB0.json</JsonFileName>
      <Type>1</Type>
      <Subprocess>0</Subprocess>
      <Category>6</Category>
      <Mode>0</Mode>
      <Scope>4</Scope>
      <OnDemand>0</OnDemand>
      <TriggerOnCreate>0</TriggerOnCreate>
      <TriggerOnDelete>0</TriggerOnDelete>
      <AsyncAutodelete>0</AsyncAutodelete>
      <SyncWorkflowLogOnFailure>0</SyncWorkflowLogOnFailure>
      <StateCode>1</StateCode>
      <StatusCode>2</StatusCode>
      <RunAs>1</RunAs>
      <IsTransacted>1</IsTransacted>
      <IntroducedVersion>1.0</IntroducedVersion>
      <IsCustomizable>1</IsCustomizable>
      <UIFlowType>2</UIFlowType>
      <IsCustomProcessingStepAllowedForOtherPublishers>1</IsCustomProcessingStepAllowedForOtherPublishers>
      <Metadata>{"clientversion":"2.46.163.24194","isvalid":true,"$schema":"https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#","schemaVersion":"ROBIN_20211012","containsActiveConnections":true,"containsGptPredictActions":false,"containsActiveCopilotActions":false,"containsActiveWorkQueuesActions":false,"containsActiveLogMessageActions":false,"multipleRequestsState":0,"scriptType":0,"disableScreenshotCaptureOnError":false,"missingUiElementRepairType":null,"flowTimeout":null}</Metadata>
      <Inputs>{"schema":{"required":["EstimateNo","SelectedEstimate","IsLeafProSelected","IsContractor","EmailInvoiceTemplate","TextMessageInvoiceTemplate","InvoicePercent","SendEmailInvoce","SendSMSInvoice","JobStatus","AttchdInvceTempltName","EncPwd","EncKey","EmailTriggerURL","LogFilePath"],"properties":{"EstimateNo":{"isOptional":false,"default":"","description":"Current EstimateNo For Which the Flow is called","format":null,"title":"EstimateNo","type":"string","value":""},"SelectedEstimate":{"isOptional":false,"default":"","description":"Selected Estimate in the signed Report","format":null,"title":"SelectedEstimate","type":"string","value":""},"IsLeafProSelected":{"isOptional":false,"default":"","description":"Boolean variable to check if leaf protection options are selected in the signed report","format":null,"title":"IsLeafProSelected","type":"boolean","value":"False"},"IsContractor":{"isOptional":false,"default":"","description":"Boolean Variable to check if customer is a contractor","format":null,"title":"IsContractor","type":"boolean","value":"False"},"EmailInvoiceTemplate":{"isOptional":false,"default":"","description":"Template Name for invoice to be send over email","format":null,"title":"EmailInvoiceTemplate","type":"string","value":""},"TextMessageInvoiceTemplate":{"isOptional":false,"default":"","description":"Invoice Template Name to be used in text message","format":null,"title":"InvoiceTemplateTextMessage","type":"string","value":""},"InvoicePercent":{"isOptional":false,"default":"","description":"Amount Percent to send on invoice","format":null,"title":"InvoicePercent","type":"number","value":"0"},"SendEmailInvoce":{"isOptional":false,"default":"","description":"Boolean variable to configure  if invoice to be sent on email","format":null,"title":"SendEmailInvoice","type":"boolean","value":"False"},"SendSMSInvoice":{"isOptional":false,"default":"","description":"Boolean variable to configure  if invoice to be sent on SMS","format":null,"title":"SendSMSInvoice","type":"boolean","value":"False"},"JobStatus":{"isOptional":false,"default":"","description":"Status for the job when estimate convered to job","format":null,"title":"JobStatus","type":"string","value":""},"AttchdInvceTempltName":{"isOptional":false,"default":"","description":"Attachment Template Name For invoice in Email","format":null,"title":"AttchdInvceTempltName","type":"string","value":""},"EncPwd":{"isOptional":false,"default":"","description":"Encrypted password for SF","format":"password","title":"EncPwd","type":"string","value":null},"EncKey":{"isOptional":false,"default":"","description":"Encryption Key","format":"password","title":"EncKey","type":"string","value":null},"EmailTriggerURL":{"isOptional":false,"default":"","description":"URL For Sending Emails If any Error Occurs","format":null,"title":"EmailTriggerURL","type":"string","value":""},"LogFilePath":{"isOptional":false,"default":"","description":"Path For the log file from onedrive","format":null,"title":"LogFilePath","type":"string","value":""}},"type":"object"}}</Inputs>
      <Outputs>{"schema":{"properties":{"Status":{"default":"","description":"Flow Status for current EstimateNo, to determine which steps have been completed so far.","format":null,"title":"Status","type":"string","value":null}},"type":"object"}}</Outputs>
      <Dependencies>{"childFlows":[],"workQueues":[],"environmentVariables":[],"requiredBinaries":["22fe8639-e112-49c7-9361-b3b25a75213b","4b845f17-24a6-4583-860e-72317f5062ea","51487b43-e434-49a4-b1a5-6b72ae75376c","ea241e0e-8e7b-4040-9359-91a425fe16f9"]}</Dependencies>
      <ConnectionReferences>[{"api":{"name":"/providers/Microsoft.PowerApps/apis/shared_onedrive"},"connectionReferenceLogicalName":"cr570_sharedonedrive_0881d","displayName":"OneDrive ServiceFusionAndSumoQuotesIntegration-0881d","isDisabled":false,"name":"shared-onedrive-f745c323-1d9b-4613-b52a-48c3add12b0c","padInternalId":"6881a55f-5c93-4145-b1f6-762282046b10","isEmbedded":false}]</ConnectionReferences>
      <Definition>"@@ConnectionString: ''\r\n@@Type: 'Local'\r\n@@DesktopType: 'local'\r\n@@DisplayName: 'Local computer'\r\nIMPORT 'controlRepo.appmask' AS appmask\r\nIMPORT 'imageRepo.imgrepo' AS imgrepo\r\n@SENSITIVE: [EncPwd, EncKey, DecryptedPwdText]\r\n@INPUT EstimateNo : { 'Description': 'Current EstimateNo For Which the Flow is called', 'FriendlyName': 'EstimateNo', 'Type': 'String', 'IsOptional': False, 'DefaultValue': '' } \r\n@INPUT SelectedEstimate : { 'Description': 'Selected Estimate in the signed Report', 'FriendlyName': 'SelectedEstimate', 'Type': 'String', 'IsOptional': False, 'DefaultValue': '' } \r\n@INPUT IsLeafProSelected : { 'Description': 'Boolean variable to check if leaf protection options are selected in the signed report', 'FriendlyName': 'IsLeafProSelected', 'Type': 'Bool', 'IsOptional': False, 'DefaultValue': False } \r\n@INPUT IsContractor : { 'Description': 'Boolean Variable to check if customer is a contractor', 'FriendlyName': 'IsContractor', 'Type': 'Bool', 'IsOptional': False, 'DefaultValue': False } \r\n@INPUT EmailInvoiceTemplate : { 'Description': 'Template Name for invoice to be send over email', 'FriendlyName': 'EmailInvoiceTemplate', 'Type': 'String', 'IsOptional': False, 'DefaultValue': '' } \r\n@INPUT TextMessageInvoiceTemplate : { 'Description': 'Invoice Template Name to be used in text message', 'FriendlyName': 'InvoiceTemplateTextMessage', 'Type': 'String', 'IsOptional': False, 'DefaultValue': '' } \r\n@OUTPUT Status : { 'Description': 'Flow Status for current EstimateNo, to determine which steps have been completed so far.', 'FriendlyName': 'Status', 'Type': 'String' } \r\n@INPUT InvoicePercent : { 'Description': 'Amount Percent to send on invoice', 'FriendlyName': 'InvoicePercent', 'Type': 'Numeric', 'IsOptional': False, 'DefaultValue': 0 } \r\n@INPUT SendEmailInvoce : { 'Description': 'Boolean variable to configure  if invoice to be sent on email', 'FriendlyName': 'SendEmailInvoice', 'Type': 'Bool', 'IsOptional': False, 'DefaultValue': False } \r\n@INPUT SendSMSInvoice : { 'Description': 'Boolean variable to configure  if invoice to be sent on SMS', 'FriendlyName': 'SendSMSInvoice', 'Type': 'Bool', 'IsOptional': False, 'DefaultValue': False } \r\n@INPUT JobStatus : { 'Description': 'Status for the job when estimate convered to job', 'FriendlyName': 'JobStatus', 'Type': 'String', 'IsOptional': False, 'DefaultValue': '' } \r\n@INPUT AttchdInvceTempltName : { 'Description': 'Attachment Template Name For invoice in Email', 'FriendlyName': 'AttchdInvceTempltName', 'Type': 'String', 'IsOptional': False, 'DefaultValue': '' } \r\n@INPUT EncPwd : { 'Description': 'Encrypted password for SF', 'FriendlyName': 'EncPwd', 'Type': 'String', 'IsOptional': False, 'DefaultValue': '' } \r\n@INPUT EncKey : { 'Description': 'Encryption Key', 'FriendlyName': 'EncKey', 'Type': 'String', 'IsOptional': False, 'DefaultValue': '' } \r\n@INPUT EmailTriggerURL : { 'Description': 'URL For Sending Emails If any Error Occurs', 'FriendlyName': 'EmailTriggerURL', 'Type': 'String', 'IsOptional': False, 'DefaultValue': '' } \r\n@INPUT LogFilePath : { 'Description': 'Path For the log file from onedrive', 'FriendlyName': 'LogFilePath', 'Type': 'String', 'IsOptional': False, 'DefaultValue': '' } \r\nLogging.LogMessage Message: $'''Flow Started''' LogLevel: Logging.LogLevel.InfoLevel\r\nVariables.CreateNewDatatable InputTable: { ^['DateTime', 'FlowType', 'FlowName', 'Level', 'Message'], [$'''''', $'''''', $'''''', $'''''', $''''''] } DataTable=&gt; LogMessageTable\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Desktop Flow Started']\r\n# Logging End\r\nBLOCK 'Get Log File On Local'\r\nON BLOCK ERROR all\r\n    THROW ERROR\r\nEND\r\n    Folder.Create FolderPath: $'''C:\\\\EstimateInfoFiles''' FolderName: EstimateNo\r\n    # Get LogText File On Local\r\n    @@path: '%LogFilePath%'\r\n@@connectionDisplayName: 'OneDrive ServiceFusionAndSumoQuotesIntegration-0881d'\r\nExternal.InvokeCloudConnector Connection: '6881a55f-5c93-4145-b1f6-762282046b10' ConnectorId: '/providers/Microsoft.PowerApps/apis/shared_onedrive' OperationId: 'GetFileContentByPath' @path: LogFilePath @inferContentType: True @GetFileContentByPathResponse=&gt; LogFileContent\r\n    File.GetPathPart File: LogFilePath FileName=&gt; LogFileName\r\n    File.ConvertFromBinary BinaryData: LogFileContent File: $'''/EstimateInfoFiles/%EstimateNo%/%LogFileName%''' IfFileExists: File.IfExists.Overwrite\r\nEND\r\n# variable to decide whether to send email to client or not\r\nSET SendToClient TO $'''False'''\r\nSET ClientAction TO $'''No Action'''\r\nSET EstimateSearchFailed TO False\r\nSET CurrentEstimateOptionNo TO 0\r\nSET LocalFilePath TO $'''C:\\\\EstimateInfoFiles\\\\%EstimateNo%'''\r\nBLOCK 'Find and Save csv files To Local'\r\nON BLOCK ERROR all\r\n    CALL 'subflow_Send Failure Email'\r\n    THROW ERROR\r\nEND\r\n    IF IsLeafProSelected = True THEN\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Additional Options Selected - Downloading Csv Files From OneDrive Started']\r\n        # Logging End\r\n        Logging.LogMessage Message: $'''Downloading files from OneDrive to local started''' LogLevel: Logging.LogLevel.InfoLevel\r\n        CALL 'subflow_Get files On Local'\r\n        Logging.LogMessage Message: $'''Downloading files from OneDrive to local completed''' LogLevel: Logging.LogLevel.InfoLevel\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'CSV Files Download To Local Completed']\r\n        # Logging End\r\n    END\r\nEND\r\n# Launch Chrome and Open ServiceFusion\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Starting the chrome Browser']\r\n# Logging End\r\nBLOCK 'Launch Chrome'\r\nON BLOCK ERROR all\r\n    SET SendToClient TO False\r\n    CALL 'subflow_Send Failure Email'\r\n    THROW ERROR\r\nEND\r\n    Logging.LogMessage Message: $'''Launching chrome...''' LogLevel: Logging.LogLevel.InfoLevel\r\n    WebAutomation.LaunchChrome.LaunchChrome Url: $'''https://auth.servicefusion.com/auth/login''' WindowState: WebAutomation.BrowserWindowState.Maximized ClearCache: False ClearCookies: False WaitForPageToLoadTimeout: 60 Timeout: 60 PiPUserDataFolderMode: WebAutomation.PiPUserDataFolderModeEnum.AutomaticProfile BrowserInstance=&gt; Browser\r\n    WebAutomation.GetDetailsOfWebPage BrowserInstance: Browser DetailsType: WebAutomation.DetailsType.URLAddress Details=&gt; CurrentURL\r\n    Logging.LogMessage Message: $'''Chrome Started Successfully...''' LogLevel: Logging.LogLevel.InfoLevel\r\nEND\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Chrome Started Succeessfully']\r\n# Logging End\r\n# If Session Not Already Exists\r\nBLOCK 'Login To Service Fusion'\r\nON BLOCK ERROR all\r\n    SET SendToClient TO True\r\n    SET ClientAction TO $'''Check if the login credentials not changed'''\r\n    CALL 'subflow_Send Failure Email'\r\n    GOTO 'Close Browser'\r\nEND\r\n    IF NotContains(CurrentURL, $'''https://admin.servicefusion.com/jobs''', False) THEN\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Logging In to ServiceFusion']\r\n        # Logging End\r\n        Logging.LogMessage Message: $'''Process for Login To ServiceFusion Started....''' LogLevel: Logging.LogLevel.InfoLevel\r\n        CALL subflow_Login\r\n        WAIT 5\r\n        Logging.LogMessage Message: $'''Process for Login To ServiceFusion Completed....''' LogLevel: Logging.LogLevel.InfoLevel\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Logged In To ServiceFusion Successfully']\r\n        # Logging End\r\n    END\r\nEND\r\nBLOCK 'Navigating to Estimate Dashboard Page'\r\nON BLOCK ERROR all\r\n    SET SendToClient TO False\r\n    CALL 'subflow_Send Failure Email'\r\n    GOTO 'Close Browser'\r\nEND\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Navigating to Estimate DashBoard Page']\r\n    # Logging End\r\n    Logging.LogMessage Message: $'''navigating to Estimate Dashboard''' LogLevel: Logging.LogLevel.InfoLevel\r\n    WebAutomation.GoToWebPage.GoToWebPage BrowserInstance: Browser Url: $'''https://admin.servicefusion.com/estimate/estimateDashboard''' WaitForPageToLoadTimeout: 60\r\n    WebAutomation.GetDetailsOfWebPage BrowserInstance: Browser DetailsType: WebAutomation.DetailsType.URLAddress Details=&gt; CurrentURL\r\n    # When Logged In Successfully\r\n    IF NotContains(CurrentURL, $'''https://admin.servicefusion.com/estimate/estimateDashboard''', False) THEN\r\n        WebAutomation.GoToWebPage.GoToWebPage BrowserInstance: Browser Url: $'''https://admin.servicefusion.com/estimate/estimateDashboard''' WaitForPageToLoadTimeout: 60\r\n    END\r\n    Logging.LogMessage Message: $'''Reached to Estimate Dashboard Page...''' LogLevel: Logging.LogLevel.InfoLevel\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Estimate Dashboard Page Opened']\r\n    # Logging End\r\nEND\r\n# Search and navigate to EstimateDetailsPage\r\nBLOCK 'Search in Estimate Provided'\r\nON BLOCK ERROR all\r\n    SET EstimateSearchFailed TO True\r\n    CALL 'subflow_Send Failure Email'\r\n    GOTO 'Close Browser'\r\nEND\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Searching For Estimate Under - Estimate Provided']\r\n    # Logging End\r\n    Logging.LogMessage Message: $'''Process for Searching for estimateNo in Estimate Provided started....''' LogLevel: Logging.LogLevel.InfoLevel\r\n    CALL 'subflow_search In Estimate Provided'\r\n    Logging.LogMessage Message: $'''Process for Searching for estimateNo in Estimate Provided completed....''' LogLevel: Logging.LogLevel.InfoLevel\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Searching For Estimate Under Estimate Provided - Completed']\r\n    # Logging End\r\nEND\r\n# Get Signed Estimate Ordinal Value\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Finding Selected Estimate Ordinal Value']\r\n# Logging End\r\nSWITCH SelectedEstimate\r\n    CASE = $'''Tier1'''\r\n        SET CurrentEstimateOptionNo TO 1\r\n    CASE = $'''Tier2'''\r\n        SET CurrentEstimateOptionNo TO 2\r\n    CASE = $'''Tier3'''\r\n        SET CurrentEstimateOptionNo TO 3\r\nEND\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Selected Option Ordinal Value Found - ' + CurrentEstimateOptionNo]\r\n# Logging End\r\nBLOCK 'Upload Signed Report PDF'\r\nON BLOCK ERROR all\r\n    SET SendToClient TO True\r\n    SET ClientAction TO $'''Failed to upload Signed Report PDF. Upload it from OneDrive Folder'''\r\n    CALL 'subflow_Send Failure Email'\r\n    NEXT ACTION\r\nEND\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Uploading Signed PDF Report - Started']\r\n    # Logging End\r\n    Logging.LogMessage Message: $'''Process for uploading signed report pdf started...''' LogLevel: Logging.LogLevel.InfoLevel\r\n    CALL 'subflow_upload signed report'\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Uploading Signed PDF report - Completed']\r\n    # Logging End\r\n    Logging.LogMessage Message: $'''Process for uploading signed report pdf completed...''' LogLevel: Logging.LogLevel.InfoLevel\r\nEND\r\nBLOCK 'updt estimate if leafpro selected'\r\nON BLOCK ERROR all\r\n    CALL 'subflow_Send Failure Email'\r\n    GOTO 'Close Browser'\r\nEND\r\n    IF IsLeafProSelected = True THEN\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Additional Options Selected - Adding Additional Selected Options Under selected Estimate']\r\n        # Logging End\r\n        Logging.LogMessage Message: $'''Process for updating the estimate options (adding leaf protection options) started...''' LogLevel: Logging.LogLevel.InfoLevel\r\n        CALL 'subflow_Updt Est'\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Estimate Update - Completed']\r\n        # Logging End\r\n        Logging.LogMessage Message: $'''Process for updating the estimate options (adding leaf protection options) completed...''' LogLevel: Logging.LogLevel.InfoLevel\r\n    END\r\nEND\r\nSET Status TO $'''SGNREPUPDT'''\r\nBLOCK 'Convert to job'\r\nON BLOCK ERROR all\r\n    SET SendToClient TO True\r\n    SET ClientAction TO $'''failed while converting to job, you can perform manually for estimate No %EstimateNo%'''\r\n    CALL 'subflow_Send Failure Email'\r\n    GOTO 'Close Browser'\r\nEND\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Converting to job - started']\r\n    # Logging End\r\n    Logging.LogMessage Message: $'''Process for converting estimate into job started...''' LogLevel: Logging.LogLevel.InfoLevel\r\n    CALL 'subflow_convert to job'\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Converting to job - Completed']\r\n    # Logging End\r\n    Logging.LogMessage Message: $'''Process for converting estimate into job completed...''' LogLevel: Logging.LogLevel.InfoLevel\r\nEND\r\nSET Status TO $'''ESTCONVJOB'''\r\nBLOCK 'send payment link'\r\nON BLOCK ERROR all\r\n    SET SendToClient TO True\r\n    SET ClientAction TO $'''You can send the email and sms for bill payment for estimate number %EstimateNo%'''\r\n    CALL 'subflow_Send Failure Email'\r\n    GOTO 'Close Browser'\r\nEND\r\n    IF IsContractor = False THEN\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Resident Case - Sending Invoice To customer Started']\r\n        # Logging End\r\n        Logging.LogMessage Message: $'''Process for sending invoice on email and sms started...''' LogLevel: Logging.LogLevel.InfoLevel\r\n        CALL 'subflow_send payment link via sms_email'\r\n        Logging.LogMessage Message: $'''Process for sending invoice on email and sms completed...''' LogLevel: Logging.LogLevel.InfoLevel\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Sending Invoice to customer Completed']\r\n        # Logging End\r\n    END\r\nEND\r\nSET Status TO $'''COMPLETED'''\r\nLABEL 'Close Browser'\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Logging Out From ServiceFusion']\r\n# Logging End\r\nLogging.LogMessage Message: $'''Logging Out From ServiceFusion...''' LogLevel: Logging.LogLevel.InfoLevel\r\nWebAutomation.GoToWebPage.GoToWebPage BrowserInstance: Browser Url: $'''https://admin.servicefusion.com/site/logout''' WaitForPageToLoadTimeout: 60\r\nON ERROR REPEAT 2 TIMES WAIT 2\r\nON ERROR\r\n\r\nEND\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Logged Out From ServiceFusion']\r\n# Logging End\r\nLogging.LogMessage Message: $'''Logged Out From ServiceFusion...''' LogLevel: Logging.LogLevel.InfoLevel\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Closing Browser']\r\n# Logging End\r\nLogging.LogMessage Message: $'''Closing chrome browser...''' LogLevel: Logging.LogLevel.InfoLevel\r\nWebAutomation.CloseWebBrowser BrowserInstance: Browser\r\n# Logging Start\r\nDateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\nVariables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Browser Closed and Desktop Flow Completed']\r\n# Loggin End\r\nLogging.LogMessage Message: $'''Browser closed''' LogLevel: Logging.LogLevel.InfoLevel\r\nBLOCK 'Save Log File On OneDrive'\r\nON BLOCK ERROR all\r\n\r\nEND\r\n    File.WriteToCSVFile.WriteCSV VariableToWrite: LogMessageTable CSVFile: $'''/EstimateInfoFiles/%EstimateNo%/%LogFileName%''' CsvFileEncoding: File.CSVEncoding.UTF8 IncludeColumnNames: True IfFileExists: File.IfFileExists.Append ColumnsSeparator: File.CSVColumnsSeparator.SystemDefault\r\n    File.ConvertToBinary File: $'''C:/EstimateInfoFiles/%EstimateNo%/%LogFileName%''' BinaryData=&gt; UpdatedLogFileContent\r\n    @@folderPath: '/Logs/Report Signed'\r\n@@connectionDisplayName: 'OneDrive ServiceFusionAndSumoQuotesIntegration-0881d'\r\nExternal.InvokeCloudConnector Connection: '6881a55f-5c93-4145-b1f6-762282046b10' ConnectorId: '/providers/Microsoft.PowerApps/apis/shared_onedrive' OperationId: 'CreateFile' @folderPath: $'''/Logs/Report Signed''' @name: LogFileName @body: UpdatedLogFileContent @CreateFileResponse=&gt; CreateFileResponse4\r\nEND\r\nFolder.Delete Folder: $'''C:/EstimateInfoFiles/%EstimateNo%'''\r\nON ERROR\r\n\r\nEND\r\n# Logging End\r\nLogging.LogMessage Message: $'''Log File Saved And Flow Completed''' LogLevel: Logging.LogLevel.InfoLevel\r\nFUNCTION 'subflow_Get files On Local' GLOBAL\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Find all csv files on OneDrive']\r\n    # Logging End\r\n    @@path: '/EstimateInfo/%EstimateNo%'\r\n@@connectionDisplayName: 'OneDrive ServiceFusionAndSumoQuotesIntegration-0881d'\r\nExternal.InvokeCloudConnector Connection: '6881a55f-5c93-4145-b1f6-762282046b10' ConnectorId: '/providers/Microsoft.PowerApps/apis/shared_onedrive' OperationId: 'FindFilesByPath' @query: $'''.*\\\\.csv''' @path: $'''/EstimateInfo/%EstimateNo%''' @findMode: $'''Pattern''' @maxFileCount: 10 @FindFilesByPathResponse=&gt; FindFilesByPathResponse\r\n    IF (Folder.IfFolderExists.DoesNotExist Path: LocalFilePath) THEN\r\n        Folder.Create FolderPath: $'''C:\\\\EstimateInfoFiles''' FolderName: EstimateNo\r\n    END\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Downloading all csv files , total files - ' + FindFilesByPathResponse.Count]\r\n    # Logging End\r\n    LOOP FOREACH CurrentEstimateInfoFile IN FindFilesByPathResponse\r\n        @@id: '%CurrentEstimateInfoFile.Id%'\r\n@@connectionDisplayName: 'OneDrive ServiceFusionAndSumoQuotesIntegration-0881d'\r\nExternal.InvokeCloudConnector Connection: '6881a55f-5c93-4145-b1f6-762282046b10' ConnectorId: '/providers/Microsoft.PowerApps/apis/shared_onedrive' OperationId: 'GetFileContent' @id: CurrentEstimateInfoFile.Id @inferContentType: True @GetFileContentResponse=&gt; GetFileContentResponse\r\n        File.ConvertFromBinary BinaryData: GetFileContentResponse File: $'''%LocalFilePath%\\\\%CurrentEstimateInfoFile.Name%''' IfFileExists: File.IfExists.Overwrite\r\n    END\r\nEND FUNCTION\r\nFUNCTION 'subflow_Send Failure Email' GLOBAL\r\n    CALL 'Get ScreenShot'\r\n    ERROR =&gt; LastError Reset: True\r\n    BLOCK 'Save Log File '\r\nON BLOCK ERROR all\r\n\r\nEND\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Error', 'In SubFlow:  ' + LastError.SubflowName + ',  In Action:  ' + LastError.ActionName + ',  Error:  ' + LastError.Message]\r\n        # Logging End\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Error', 'Sending Emails With Error Message']\r\n        # Logging End\r\n        File.WriteToCSVFile.WriteCSV VariableToWrite: LogMessageTable CSVFile: $'''/EstimateInfoFiles/%EstimateNo%/%LogFileName%''' CsvFileEncoding: File.CSVEncoding.UTF8 IncludeColumnNames: True IfFileExists: File.IfFileExists.Append ColumnsSeparator: File.CSVColumnsSeparator.SystemDefault\r\n        File.ConvertToBinary File: $'''C:/EstimateInfoFiles/%EstimateNo%/%LogFileName%''' BinaryData=&gt; UpdatedLogFileContent\r\n        @@folderPath: '/Logs/Report Signed'\r\n@@connectionDisplayName: 'OneDrive ServiceFusionAndSumoQuotesIntegration-0881d'\r\nExternal.InvokeCloudConnector Connection: '6881a55f-5c93-4145-b1f6-762282046b10' ConnectorId: '/providers/Microsoft.PowerApps/apis/shared_onedrive' OperationId: 'CreateFile' @folderPath: $'''/Logs/Report Signed''' @name: LogFileName @body: UpdatedLogFileContent @CreateFileResponse=&gt; CreateFileResponse4\r\n    END\r\n    Text.Replace Text: LastError.Message TextToFind: $'''\\\"|\\\\\\\\|\\'|\\\\\\\\|\\\\/''' IsRegEx: True IgnoreCase: False ReplaceWith: $'''%''%''' ActivateEscapeSequences: False Result=&gt; FormattedLastError\r\n    Text.Replace Text: ClientAction TextToFind: $'''\\\"|\\\\\\\\|\\'|\\\\\\\\|\\\\/''' IsRegEx: True IgnoreCase: False ReplaceWith: $'''%''%''' ActivateEscapeSequences: False Result=&gt; FormattedClientActionText\r\n    IF SendToClient = True THEN\r\n        # send email to client\r\n        Web.InvokeWebService.InvokeWebService Url: EmailTriggerURL Method: Web.Method.Post Accept: $'''application/json''' ContentType: $'''application/json''' RequestBody: $'''{\r\n\\\"flowtype\\\":\\\"desktop flow\\\",\r\n\\\"emailtype\\\":\\\"client\\\",\r\n \\\"supportEmailContent\\\":{},\r\n  \\\"clientEmailContent\\\":{\r\n        \\\"estimateNo\\\":\\\"%EstimateNo%\\\",\r\n        \\\"error\\\":\\\"%FormattedLastError%\\\",\r\n        \\\"action\\\":\\\"%FormattedClientActionText%\\\",\r\n        }\r\n}''' ConnectionTimeout: 30 FollowRedirection: True ClearCookies: False FailOnErrorStatus: False EncodeRequestBody: False UserAgent: $'''Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.21) Gecko/20100312 Firefox/3.6''' Encoding: Web.Encoding.AutoDetect AcceptUntrustedCertificates: False Response=&gt; WebServiceResponseClient StatusCode=&gt; StatusCodeClient\r\n        ON ERROR REPEAT 3 TIMES WAIT 3 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n        END\r\n    END\r\n    # send email to support\r\n    Web.InvokeWebService.InvokeWebService Url: EmailTriggerURL Method: Web.Method.Post Accept: $'''application/json''' ContentType: $'''application/json''' RequestBody: $'''{\r\n\\\"flowtype\\\":\\\"desktop flow\\\",\r\n\\\"emailtype\\\":\\\"support\\\",\r\n \\\"supportEmailContent\\\":{\r\n    \\\"flowName\\\": \\\"convert to job and send email_sms - %LastError.SubflowName%\\\",\r\n     \\\"failedAction\\\": \\\"%LastError.ActionName%\\\",\r\n      \\\"failureMessage\\\": \\\"%FormattedLastError%\\\",\r\n       \\\"flowRunURL\\\":\\\"#\\\",\r\n       \\\"LogFilePath\\\":\\\"%LogFilePath%\\\",\r\n        \\\"SSFileName\\\":\\\"%SSPath%\\\",\r\n        \\\"EstimateNo\\\":\\\"%EstimateNo%\\\"\r\n},\r\n  \\\"clientEmailContent\\\":{}\r\n}''' ConnectionTimeout: 30 FollowRedirection: True ClearCookies: False FailOnErrorStatus: False EncodeRequestBody: False UserAgent: $'''Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.21) Gecko/20100312 Firefox/3.6''' Encoding: Web.Encoding.AutoDetect AcceptUntrustedCertificates: False Response=&gt; WebServiceResponseSupport StatusCode=&gt; StatusCodeSupport\r\n    ON ERROR REPEAT 3 TIMES WAIT 3 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n    END\r\nEND FUNCTION\r\nFUNCTION subflow_Login GLOBAL\r\n    WebAutomation.PopulateTextField.PopulateTextFieldUsePhysicalKeyboard BrowserInstance: Browser Control: appmask['Login Page']['CompanyId Input'] Text: $'''mrgutterinc''' Mode: WebAutomation.PopulateTextMode.Replace UnfocusAfterPopulate: True WaitForPageToLoadTimeout: 60\r\n    WebAutomation.PopulateTextField.PopulateTextFieldUsePhysicalKeyboard BrowserInstance: Browser Control: appmask['Login Page']['UserId Input'] Text: $'''erikhbc''' Mode: WebAutomation.PopulateTextMode.Replace UnfocusAfterPopulate: True WaitForPageToLoadTimeout: 60\r\n    Cryptography.DecryptText.DecryptTextWithAES Encoding: Cryptography.EncryptionEncoding.Unicode TextToDecrypt: EncPwd DecryptionKey: EncKey Padding: Cryptography.PaddingMode.PKCS7 KeySize: Cryptography.AESKeySize.Bits256 DecryptedText=&gt; DecryptedPwdText\r\n    WebAutomation.PopulateTextField.PopulateTextFieldUsePhysicalKeyboard BrowserInstance: Browser Control: appmask['Login Page']['Password Input'] Text: DecryptedPwdText Mode: WebAutomation.PopulateTextMode.Replace UnfocusAfterPopulate: True WaitForPageToLoadTimeout: 60\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Login Page']['Button \\'Sign In\\''] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    ON ERROR REPEAT 3 TIMES WAIT 2\r\n    END\r\nEND FUNCTION\r\nFUNCTION 'subflow_Updt Est' GLOBAL\r\n    WebAutomation.ExecuteJavascript BrowserInstance: Browser Javascript: $'''function ExecuteScript() { \r\ndocument.documentElement.scrollTop = 0\r\n\r\n}''' Result=&gt; Result\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Edit Estimate Link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    ON ERROR REPEAT 3 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 1 MaxInterval: 360\r\n    END\r\n    SET EstimateOptionNoTemp TO CurrentEstimateOptionNo\r\n    SET LocalFilePath TO $'''C:\\\\EstimateInfoFiles\\\\%EstimateNo%'''\r\n    IF CurrentEstimateOptionNo &gt; 0 THEN\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Reading CSV Files for additional options']\r\n        # Logging End\r\n        File.ReadFromCSVFile.ReadCSV CSVFile: $'''%LocalFilePath%\\\\leafpro.csv''' Encoding: File.CSVEncoding.UTF8 TrimFields: True FirstLineContainsColumnNames: True ColumnsSeparator: File.CSVColumnsSeparator.SystemDefault CSVTable=&gt; CSVTable\r\n        ON ERROR REPEAT 2 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n        END\r\n        WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Estimate Option Tab'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n        ON ERROR REPEAT 4 TIMES WAIT 2\r\n        END\r\n        WebAutomation.ExecuteJavascript BrowserInstance: Browser Javascript: $'''function ExecuteScript() {\r\n\t let selector = \\'div#services-table_\\' +  %CurrentEstimateOptionNo%  +\\'_sub_\\' + %CurrentEstimateOptionNo% +    \\' div[class*=\\\"services-div-qty\\\"] input, div[class*=\\\"products-div-qty\\\"] input\\';\r\n        let inputElements  = document.querySelectorAll(selector);\r\n    \r\n\tif(inputElements!=null)\r\n        return inputElements.length;\r\n    return 0;\r\n\r\n}''' Result=&gt; Result\r\n        ON ERROR REPEAT 3 TIMES WAIT 1\r\n        END\r\n        IF NotContains(Result, $'''Object''', True) THEN\r\n            Text.ToNumber Text: Result Number=&gt; CurrentLineItemIndex\r\n        END\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Adding Additional Options In Selected Estimate Option']\r\n        # Logging End\r\n        LOOP FOREACH CurrentLineItem IN CSVTable\r\n            WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Product/Service Search Input For Line Item'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n            ON ERROR REPEAT 4 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n            END\r\n            SET LineItemsAddAttempt TO 0\r\n            LABEL RetryLineItemAdd\r\n            IF LineItemsAddAttempt &lt; 3 THEN\r\n                Variables.IncreaseVariable Value: LineItemsAddAttempt IncrementValue: 1\r\n                WebAutomation.PopulateTextField.PopulateTextField BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Product/Service Search Input For Line Item'] Text: CurrentLineItem['Name'] Mode: WebAutomation.PopulateTextMode.Replace EmulateTyping: True UnfocusAfterPopulate: False WaitForPageToLoadTimeout: 60\r\n                ON ERROR REPEAT 3 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n                END\r\n                WAIT 2\r\n                MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Down}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n                MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n                WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElement BrowserInstance: Browser Control: appmask['Estimate Edit Page']['CurrentEstimate Qty Input']) FOR 5 \r\n                ON ERROR\r\n                    GOTO RetryLineItemAdd\r\n                END\r\n                WebAutomation.PopulateTextField.PopulateTextFieldUsePhysicalKeyboard BrowserInstance: Browser Control: appmask['Estimate Edit Page']['CurrentEstimate Qty Input'] Text: CurrentLineItem['Qty'] Mode: WebAutomation.PopulateTextMode.Replace UnfocusAfterPopulate: False WaitForPageToLoadTimeout: 60\r\n                MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Tab}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n                MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: CurrentLineItem['Price'] DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n                Variables.IncreaseVariable Value: CurrentLineItemIndex IncrementValue: 1\r\n            ELSE\r\n                SET SendToClient TO True\r\n                SET ClientAction TO $'''LineItem Not Found In Search:\r\nAdd LineItem Under EstimateOption %SelectedEstimate%:\r\nName: %CurrentLineItem['Name']%,\r\nDescription: %CurrentLineItem['Description']%'''\r\n                CALL 'subflow_Send Failure Email'\r\n            END\r\n        END\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Additional Options Added under selected Estimate']\r\n        # Logging End\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Renaming Estimate Option Names-Started']\r\n        # Logging End\r\n        # rename the estimate option names before saving the estimates\r\n        SET CurrentEstimateOptionNo TO 1\r\n        Folder.GetFiles Folder: LocalFilePath FileFilter: $'''Tier1.csv;Tier2.csv;Tier3.csv''' IncludeSubfolders: False FailOnAccessDenied: True SortBy1: Folder.SortBy.NoSort SortDescending1: False SortBy2: Folder.SortBy.NoSort SortDescending2: False SortBy3: Folder.SortBy.NoSort SortDescending3: False Files=&gt; EstimateCSVFiles\r\n        LOOP FOREACH CurrentTierCsv IN EstimateCSVFiles\r\n            File.ReadFromCSVFile.ReadCSV CSVFile: CurrentTierCsv.FullName Encoding: File.CSVEncoding.UTF8 TrimFields: True FirstLineContainsColumnNames: True ColumnsSeparator: File.CSVColumnsSeparator.SystemDefault CSVTable=&gt; CSVTierTable\r\n            WebAutomation.Focus.Focus BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Input PO Number'] WaitForPageToLoadTimeout: 60\r\n            ON ERROR\r\n\r\n            END\r\n            WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Estimate Option Tab'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n            ON ERROR REPEAT 4 TIMES WAIT 2\r\n            END\r\n            WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Estimate Option Dropdown Icon'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n            WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Estimate Option Rename Link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({A})''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n            IF CSVTierTable.RowsCount &gt; 0 THEN\r\n                MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: CSVTierTable[0]['TierName'] DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n                MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n                Variables.IncreaseVariable Value: CurrentEstimateOptionNo IncrementValue: 1\r\n            END\r\n        END\r\n    END\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Renaming Estimate Option Names-Completed']\r\n    # Logging End\r\n    SET CurrentEstimateOptionNo TO EstimateOptionNoTemp\r\n    WebAutomation.Focus.Focus BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Button \\'Save Estimate\\''] WaitForPageToLoadTimeout: 60\r\n    ON ERROR REPEAT 3 TIMES WAIT 2\r\n    ON ERROR\r\n\r\n    END\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Edit Page']['Button \\'Save Estimate\\''] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    ON ERROR REPEAT 3 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n    END\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Estimate Saved After Update']\r\n    # Logging End\r\nEND FUNCTION\r\nFUNCTION 'subflow_search In Estimate Provided' GLOBAL\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Waiting For Status -Estimate Provied Link to Load On WebPage']\r\n    # Logging End\r\n    WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElement BrowserInstance: Browser Control: appmask['Estimate Dashboard']['Status Estimate Provided Link']) FOR 30 \r\n    ON ERROR REPEAT 2 TIMES WAIT 2\r\n    END\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Status - Provided Link Loaded']\r\n    # Logging End\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Dashboard']['Status Estimate Provided Link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    ON ERROR REPEAT 3 TIMES WAIT 2\r\n    END\r\n    WebAutomation.PopulateTextField.PopulateTextField BrowserInstance: Browser Control: appmask['Estimate Dashboard']['Estimate Search Input'] Text: EstimateNo Mode: WebAutomation.PopulateTextMode.Replace EmulateTyping: True UnfocusAfterPopulate: True WaitForPageToLoadTimeout: 60\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Waiting for Search Results']\r\n    # Logging End\r\n    WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElement BrowserInstance: Browser Control: appmask['Estimate Dashboard']['Top Result link']) FOR 3\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Search Result Loaded']\r\n    # Logging End\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Dashboard']['Top Result link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    ON ERROR REPEAT 2 TIMES WAIT 1 RetryType: RetryType.Exponential MinInterval: 1 MaxInterval: 120\r\n    END\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Click On Matched Search Result Successfull']\r\n    # Logging End\r\nEND FUNCTION\r\nFUNCTION 'subflow_convert to job' GLOBAL\r\n    SET SelectedQuoteOption TO CurrentEstimateOptionNo - 1\r\n    WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElement BrowserInstance: Browser Control: appmask['Estimate Details Page']['Button Convert To Job']) FOR 5\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Button Convert To Job'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    WAIT 1\r\n    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Waiting for Convert to job Modal to open']\r\n    # Logging End\r\n    WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElementInState BrowserInstance: Browser Control: appmask['Estimate Details Page']['Convert To Job Modal'] State: WebAutomation.ElementState.Enabled) FOR 5\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Convert to job Modal opened']\r\n    # Logging End\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Selected Estimate Option'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    ON ERROR REPEAT 2 TIMES WAIT 2\r\n    END\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Button Convert To Job Submit'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    ON ERROR REPEAT 2 TIMES WAIT 2\r\n    END\r\n    WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElement BrowserInstance: Browser Control: appmask['Job Details Page']['Job Id Link']) FOR 15\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Converted to job successfully']\r\n    # Logging End\r\n    BLOCK 'Change Job Status'\r\nON BLOCK ERROR all\r\n    SET SendToClient TO True\r\n    SET ClientAction TO $'''Bot Failed to change the job status, Please change it Manually.'''\r\n    CALL 'subflow_Send Failure Email'\r\nEND\r\n        # Changing Job status started.....\r\n        IF IsContractor = False THEN\r\n            # Logging Start\r\n            DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n            Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Customer is Resident - Updating Job Status']\r\n            # Logging End\r\n            WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElementInState BrowserInstance: Browser Control: appmask['Job Details Page']['Job Status Link'] State: WebAutomation.ElementState.Enabled) FOR 5\r\n            WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Job Details Page']['Job Status Link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n            ON ERROR REPEAT 2 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 1 MaxInterval: 360\r\n            END\r\n            WebAutomation.SetDropDownListValue.SetDropDownListValueByName BrowserInstance: Browser Control: appmask['Job Details Page']['Select Status Dropdown'] OptionNames: JobStatus UseRegularExpression: False WaitForPageToLoadTimeout: 60\r\n            WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElementInState BrowserInstance: Browser Control: appmask['Job Details Page']['Span Job status text'] State: WebAutomation.ElementState.Enabled) FOR 3 \r\n            ON ERROR\r\n\r\n            END\r\n            WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Job Details Page']['Link Set Sub Status'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n            ON ERROR REPEAT 2 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n            END\r\n            WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElementInState BrowserInstance: Browser Control: appmask['Job Details Page']['Sub Status Dropdown '] State: WebAutomation.ElementState.Enabled) FOR 3 \r\n            ON ERROR\r\n\r\n            END\r\n            WebAutomation.SetDropDownListValue.SetDropDownListValueByName BrowserInstance: Browser Control: appmask['Job Details Page']['Select Sub Status Dropdown'] OptionNames: JobStatus UseRegularExpression: False WaitForPageToLoadTimeout: 60\r\n            WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Job Details Page']['button Save Sub Status Change'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n            # Changing Job status completed.....\r\n            # Logging Start\r\n            DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n            Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Job Status Updated']\r\n            # Logging End\r\n        END\r\n    END\r\nEND FUNCTION\r\nFUNCTION 'subflow_send payment link via sms_email' GLOBAL\r\n    # create invoice with 33% amount for each lineitem in estimate\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Editing Job To Progress Billing - Started']\r\n    # Logging End\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Job Details Page']['Edit Job Link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    ON ERROR REPEAT 2 TIMES WAIT 1 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n    END\r\n    WebAutomation.Focus.Focus BrowserInstance: Browser Control: appmask['Edit Job Page']['Button Progress Billing'] WaitForPageToLoadTimeout: 60\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Edit Job Page']['Button Progress Billing'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    ON ERROR REPEAT 3 TIMES WAIT 1 RetryType: RetryType.Exponential MinInterval: 1 MaxInterval: 360\r\n    END\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Edit Job Page']['Button Save Job'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Job Updated With Progress Billing']\r\n    # Logging End\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Creating Invoice with amount - ' + InvoicePercent + '  of total - Started']\r\n    # Logging End\r\n    WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElement BrowserInstance: Browser Control: appmask['Job Details Page']['Button Invoice Job']) FOR 10\r\n    WebAutomation.Focus.Focus BrowserInstance: Browser Control: appmask['Job Details Page']['Button Invoice Job'] WaitForPageToLoadTimeout: 60\r\n    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Down}\r\n{Down}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Job Details Page']['Button Invoice Job'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    ON ERROR REPEAT 2 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 1 MaxInterval: 360\r\n    END\r\n    WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElementInState BrowserInstance: Browser Control: appmask['Job Details Page']['Create Invoice Modal'] State: WebAutomation.ElementState.Enabled) FOR 7 \r\n    ON ERROR\r\n\r\n    END\r\n    WebAutomation.ExecuteJavascript BrowserInstance: Browser Javascript: $'''function ExecuteScript() { \r\n\tlet inputElem = document.querySelectorAll(\\'input[onChange*=\\\"invoiceAmountChange(event)\\\"][class*=\\\"percAmountInv\\\"]\\');\r\n\t\r\n\tif(inputElem !=null){\r\n\t\treturn inputElem.length;\r\n\t}\r\n\t\r\n\treturn 0;\r\n\r\n}''' Result=&gt; InputCount\r\n    ON ERROR REPEAT 3 TIMES WAIT 2\r\n    END\r\n    IF (WebAutomation.IfWebPageContains.WebPageContainsElementInState BrowserInstance: Browser Control: appmask['Job Details Page']['Button \\'Accept\\''] State: WebAutomation.ElementState.Enabled) THEN\r\n    ON ERROR\r\n\r\n    END\r\n        WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Job Details Page']['Button \\'Accept\\''] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    END\r\n    IF NotContains(InputCount, $'''object''', True) THEN\r\n        Text.ToNumber Text: InputCount Number=&gt; TotalInputCounts\r\n        LOOP LoopIndex FROM 0 TO TotalInputCounts - 1 STEP 1\r\n            WebAutomation.PopulateTextField.PopulateTextFieldUsePhysicalKeyboard BrowserInstance: Browser Control: appmask['Job Details Page']['Amount Percentage Input'] Text: InvoicePercent Mode: WebAutomation.PopulateTextMode.Replace UnfocusAfterPopulate: True WaitForPageToLoadTimeout: 60\r\n        END\r\n        WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Job Details Page']['Button \\'Create Invoice\\''] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleLeft OffsetX: 0 OffsetY: 0\r\n    END\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Invoice Created Successfully']\r\n    # Logging End\r\n    # send invoice on email and sms for payment\r\n    WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElement BrowserInstance: Browser Control: appmask['Job Details Page']['Latest InvoiceNumber Link']) FOR 4 \r\n    ON ERROR\r\n\r\n    END\r\n    WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Job Details Page']['Latest InvoiceNumber Link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n    IF SendEmailInvoce = True THEN\r\n        BLOCK 'Send Invoice In Email'\r\nON BLOCK ERROR all\r\n    SET SendToClient TO True\r\n    SET ClientAction TO $'''Could Not Send Invoice on email to customer, please do it manually.'''\r\n    CALL 'subflow_Send Failure Email'\r\nEND\r\n            # Logging Start\r\n            DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n            Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Sending Invoice On Email - Started']\r\n            # Logging End\r\n            WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Invoice Page']['DropDown Buttton Email_SMS'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n            WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Invoice Page']['Email Link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n            WAIT 3\r\n            WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElementInState BrowserInstance: Browser Control: appmask['Invoice Page']['Email Invoice Template Dropdown'] State: WebAutomation.ElementState.Enabled) FOR 6 \r\n            ON ERROR\r\n\r\n            END\r\n            WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Invoice Page']['Email Invoice Template Dropdown'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n            ON ERROR REPEAT 3 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n            END\r\n            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: EmailInvoiceTemplate DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n            WAIT 5\r\n            WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElementInState BrowserInstance: Browser Control: appmask['Invoice Page']['Button \\'Send\\''] State: WebAutomation.ElementState.Enabled) FOR 5 \r\n            ON ERROR\r\n\r\n            END\r\n            WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Invoice Page']['Attached Invoice Name Dropdown'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: AttchdInvceTempltName DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n            DISABLE WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Invoice Page']['Button \\'Send\\''] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\nON ERROR REPEAT 2 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\nEND\r\n            WebAutomation.ExecuteJavascript BrowserInstance: Browser Javascript: $'''function ExecuteScript() { \r\nlet btn = document.querySelector(\\'button[id=\\\"btn-load-then-complete\\\"]\\');\r\nif(btn!=null)\r\n\tbtn.click();\r\n}''' Result=&gt; Result2\r\n            SET Status TO $'''INVCSNTEML'''\r\n            # Logging Start\r\n            DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n            Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Sending Invoice on email - Completed']\r\n            # Logging End\r\n            # in case any validation popup appears, close and proceed\r\n            IF (WebAutomation.IfWebPageContains.WebPageContainsElementInState BrowserInstance: Browser Control: appmask['Job Details Page']['Button \\'Accept\\''] State: WebAutomation.ElementState.Enabled) THEN\r\n                WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Job Details Page']['Button \\'Accept\\''] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n                WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Invoice Page']['Button \\'×\\''] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n            END\r\n        END\r\n    END\r\n    IF SendSMSInvoice = True THEN\r\n        BLOCK 'Send Invoice in Text Message'\r\nON BLOCK ERROR all\r\n    SET SendToClient TO True\r\n    SET ClientAction TO $'''Could not send invoice in Text Message, Try Doing it manually.'''\r\n    THROW ERROR\r\nEND\r\n            # Logging Start\r\n            DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n            Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Sending Invoice On Text Message - Started']\r\n            # Logging End\r\n            WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElement BrowserInstance: Browser Control: appmask['Invoice Page']['Link Email Log']) FOR 5 \r\n            ON ERROR\r\n\r\n            END\r\n            WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElementInState BrowserInstance: Browser Control: appmask['Invoice Page']['DropDown Buttton Email_SMS'] State: WebAutomation.ElementState.Enabled) FOR 5 \r\n            ON ERROR\r\n\r\n            END\r\n            WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Invoice Page']['DropDown Buttton Email_SMS'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n            ON ERROR REPEAT 3 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n            END\r\n            WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Invoice Page']['Text Message Link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n            DISABLE WebAutomation.ExecuteJavascript BrowserInstance: Browser Javascript: $'''function ExecuteScript() { \r\n\tlet smsButton = document.querySelector(\\\"a[id=\\'msgInvoiceBtn\\']\\\");\r\n\t\r\n\tif(smsButton!=null)\r\n\t{\r\n\t\tsmsButton.click();\r\n\t}\r\n}'''\r\n            WAIT 4\r\n            WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElementInState BrowserInstance: Browser Control: appmask['Invoice Page']['Text Message Template DropDown'] State: WebAutomation.ElementState.Enabled) FOR 8 \r\n            ON ERROR\r\n\r\n            END\r\n            WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Invoice Page']['Text Message Template DropDown'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n            ON ERROR REPEAT 2 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n            END\r\n            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: TextMessageInvoiceTemplate DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n            MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n            WAIT 5\r\n            WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElementInState BrowserInstance: Browser Control: appmask['Invoice Page']['Button \\'Send\\''] State: WebAutomation.ElementState.Enabled) FOR 5 \r\n            ON ERROR\r\n\r\n            END\r\n            DISABLE WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Invoice Page']['Button \\'Send\\''] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\nON ERROR REPEAT 2 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\nEND\r\n            WebAutomation.ExecuteJavascript BrowserInstance: Browser Javascript: $'''function ExecuteScript() { \r\nlet btn = document.querySelector(\\'button[id=\\\"btn-load-then-complete\\\"]\\');\r\nif(btn!=null)\r\n\tbtn.click();\r\n}''' Result=&gt; Result2\r\n            SET Status TO $'''INVCSNTSMS'''\r\n            # Logging Start\r\n            DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n            Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Sending Invoice On Text Message - Completed']\r\n            # Logging End\r\n            # in case any validation popup appears, close and proceed\r\n            IF (WebAutomation.IfWebPageContains.WebPageContainsElementInState BrowserInstance: Browser Control: appmask['Job Details Page']['Button \\'Accept\\''] State: WebAutomation.ElementState.Enabled) THEN\r\n                WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Job Details Page']['Button \\'Accept\\''] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n                WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Invoice Page']['Button \\'×\\''] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n            END\r\n        END\r\n    END\r\nEND FUNCTION\r\nFUNCTION 'subflow_upload signed report' GLOBAL\r\n    # get signed report pdf file\r\n    IF (Folder.IfFolderExists.DoesNotExist Path: LocalFilePath) THEN\r\n        Folder.Create FolderPath: $'''C:\\\\EstimateInfoFiles''' FolderName: EstimateNo\r\n    END\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Downloading Signed Report PDF - Started']\r\n    # Logging End\r\n    @@path: '/EstimateInfo/%EstimateNo%/%EstimateNo%_SQ_SignedReport.pdf'\r\n@@connectionDisplayName: 'OneDrive ServiceFusionAndSumoQuotesIntegration-0881d'\r\nExternal.InvokeCloudConnector Connection: '6881a55f-5c93-4145-b1f6-762282046b10' ConnectorId: '/providers/Microsoft.PowerApps/apis/shared_onedrive' OperationId: 'GetFileContentByPath' @path: $'''/EstimateInfo/%EstimateNo%/%EstimateNo%_SQ_SignedReport.pdf''' @inferContentType: True @GetFileContentByPathResponse=&gt; SignedPDFResponse\r\n    File.ConvertFromBinary BinaryData: SignedPDFResponse File: $'''%LocalFilePath%\\\\%EstimateNo%_SQ_SignedReport.pdf''' IfFileExists: File.IfExists.Overwrite\r\n    # Logging Start\r\n    DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n    Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Downloading Signed PDF Report - Completed']\r\n    # Logging End\r\n    WAIT 1\r\n    Folder.GetFiles Folder: LocalFilePath FileFilter: $'''%EstimateNo%_SQ_SignedReport.pdf''' IncludeSubfolders: False FailOnAccessDenied: True SortBy1: Folder.SortBy.NoSort SortDescending1: False SortBy2: Folder.SortBy.NoSort SortDescending2: False SortBy3: Folder.SortBy.NoSort SortDescending3: False Files=&gt; SignedReportPDF\r\n    # upload signed report PDF\r\n    IF SignedReportPDF.Count &gt; 0 THEN\r\n        WebAutomation.Focus.Focus BrowserInstance: Browser Control: appmask['Estimate Details Page']['JOBID'] WaitForPageToLoadTimeout: 60\r\n        WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Docs Tab Link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n        WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElementInState BrowserInstance: Browser Control: appmask['Estimate Details Page']['Upload New Doc Button'] State: WebAutomation.ElementState.Enabled) FOR 3 \r\n        ON ERROR\r\n\r\n        END\r\n        WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Upload New Doc Button'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n        ON ERROR REPEAT 1 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n        END\r\n        WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Add files Link Doc Upload Modal'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n        ON ERROR REPEAT 4 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n        END\r\n        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: SignedReportPDF[0].FullName DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Return}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False\r\n        WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Start Doc Upload Link'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n        ON ERROR REPEAT 4 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n        END\r\n        WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainElementInState BrowserInstance: Browser Control: appmask['Estimate Details Page']['Add files Link Doc Upload Modal'] State: WebAutomation.ElementState.Enabled) FOR 300 \r\n        ON ERROR\r\n\r\n        END\r\n        WebAutomation.Click.Click BrowserInstance: Browser Control: appmask['Estimate Details Page']['Button \\'×\\' Doc Upload Modal Dismiss'] ClickType: WebAutomation.ClickType.LeftClick MouseClick: True WaitForPageToLoadTimeout: 60 MousePositionRelativeToElement: WebAutomation.RectangleEdgePoint.MiddleCenter OffsetX: 0 OffsetY: 0\r\n        ON ERROR REPEAT 4 TIMES WAIT 2 RetryType: RetryType.Exponential MinInterval: 2 MaxInterval: 360\r\n        END\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Signed PDF report uploaded on SF']\r\n        # Logging End\r\n    ELSE\r\n        # Logging Start\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; LogDateTime\r\n        Variables.AddRowToDataTable.AppendRowToDataTable DataTable: LogMessageTable RowToAdd: [LogDateTime, 'Desktop Flow', 'convert to job and send email_sms', 'Info', 'Failed To get signed PDF report from Local for Uploading']\r\n        # Logging End\r\n    END\r\nEND FUNCTION\r\nFUNCTION 'Get ScreenShot' GLOBAL\r\n    SET SSPath TO $'''\\'\\''''\r\n    BLOCK 'Take ScreenShot and upload to onedrive'\r\nON BLOCK ERROR all\r\n    NEXT ACTION\r\nEND\r\n        DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.UTC CurrentDateTime=&gt; CurrentDateTime\r\n        Text.ConvertDateTimeToText.FromCustomDateTime DateTime: CurrentDateTime CustomFormat: $'''yyyy_MM_dd_T_HH_mm_ss''' Result=&gt; FormattedDateTime\r\n        Workstation.TakeScreenshot.TakeScreenshotAndSaveToFile File: $'''C:\\\\EstimateInfoFiles\\\\%EstimateNo%\\\\error_%FormattedDateTime%.png''' ImageFormat: System.ImageFormat.Png\r\n        File.ConvertToBinary File: $'''C:\\\\EstimateInfoFiles\\\\%EstimateNo%\\\\error_%FormattedDateTime%.png''' BinaryData=&gt; SSImageBinary\r\n        @@folderPath: '/ErrorSS/%EstimateNo%'\r\n@@connectionDisplayName: 'OneDrive ServiceFusionAndSumoQuotesIntegration-0881d'\r\nExternal.InvokeCloudConnector Connection: '6881a55f-5c93-4145-b1f6-762282046b10' ConnectorId: '/providers/Microsoft.PowerApps/apis/shared_onedrive' OperationId: 'CreateFile' @folderPath: $'''/ErrorSS/%EstimateNo%''' @name: $'''error_EN_%EstimateNo%_%FormattedDateTime%.png''' @body: SSImageBinary @CreateFileResponse=&gt; CreateFileResponse3\r\n        SET SSPath TO $'''error_EN_%EstimateNo%_%FormattedDateTime%.png'''\r\n    END\r\nEND FUNCTION\r\n"</Definition>
      <SchemaVersion>2022.07</SchemaVersion>
      <DesktopFlowModules>[]</DesktopFlowModules>
      <PrimaryEntity>none</PrimaryEntity>
      <LocalizedNames>
        <LocalizedName languagecode="1033" description="convert to job and send email_sms flow" />
      </LocalizedNames>
    </Workflow>
    <Workflow WorkflowId="{acb3e4d6-153d-ef11-a316-000d3ac9b1d6}" Name="Update SignedReportDetails On ServiceFusion">
      <JsonFileName>/Workflows/UpdateSignedReportDetailsOnServiceFusion-ACB3E4D6-153D-EF11-A316-000D3AC9B1D6.json</JsonFileName>
      <Type>1</Type>
      <Subprocess>0</Subprocess>
      <Category>5</Category>
      <Mode>0</Mode>
      <Scope>4</Scope>
      <OnDemand>0</OnDemand>
      <TriggerOnCreate>0</TriggerOnCreate>
      <TriggerOnDelete>0</TriggerOnDelete>
      <AsyncAutodelete>0</AsyncAutodelete>
      <SyncWorkflowLogOnFailure>0</SyncWorkflowLogOnFailure>
      <StateCode>1</StateCode>
      <StatusCode>2</StatusCode>
      <RunAs>1</RunAs>
      <IsTransacted>1</IsTransacted>
      <IntroducedVersion>1.0.0.3</IntroducedVersion>
      <IsCustomizable>1</IsCustomizable>
      <IsCustomProcessingStepAllowedForOtherPublishers>1</IsCustomProcessingStepAllowedForOtherPublishers>
      <PrimaryEntity>none</PrimaryEntity>
      <LocalizedNames>
        <LocalizedName languagecode="1033" description="Update SignedReportDetails On ServiceFusion" />
      </LocalizedNames>
    </Workflow>
    <Workflow WorkflowId="{a47b5eb2-1340-ef11-a316-000d3ac9f778}" Name="Excel Estimates Data CleanUp Flow">
      <JsonFileName>/Workflows/ExcelEstimatesDataCleanUpFlow-A47B5EB2-1340-EF11-A316-000D3AC9F778.json</JsonFileName>
      <Type>1</Type>
      <Subprocess>0</Subprocess>
      <Category>5</Category>
      <Mode>0</Mode>
      <Scope>4</Scope>
      <OnDemand>0</OnDemand>
      <TriggerOnCreate>0</TriggerOnCreate>
      <TriggerOnDelete>0</TriggerOnDelete>
      <AsyncAutodelete>0</AsyncAutodelete>
      <SyncWorkflowLogOnFailure>0</SyncWorkflowLogOnFailure>
      <StateCode>1</StateCode>
      <StatusCode>2</StatusCode>
      <RunAs>1</RunAs>
      <IsTransacted>1</IsTransacted>
      <IntroducedVersion>1.0.0.5</IntroducedVersion>
      <IsCustomizable>1</IsCustomizable>
      <IsCustomProcessingStepAllowedForOtherPublishers>1</IsCustomProcessingStepAllowedForOtherPublishers>
      <PrimaryEntity>none</PrimaryEntity>
      <LocalizedNames>
        <LocalizedName languagecode="1033" description="Excel Estimates Data CleanUp Flow" />
      </LocalizedNames>
    </Workflow>
  </Workflows>
  <FieldSecurityProfiles></FieldSecurityProfiles>
  <Templates />
  <EntityMaps />
  <EntityRelationships />
  <OrganizationSettings />
  <optionsets />
  <CustomControls />
  <EntityDataProviders />
  <connectionreferences>
    <connectionreference connectionreferencelogicalname="cr570_ExcelOnlineServiceFusionSumoQuoteIntegration">
      <connectionreferencedisplayname>Excel Online ServiceFusionSumoQuoteIntegration</connectionreferencedisplayname>
      <connectorid>/providers/Microsoft.PowerApps/apis/shared_excelonline</connectorid>
      <iscustomizable>1</iscustomizable>
      <promptingbehavior>0</promptingbehavior>
      <statecode>0</statecode>
      <statuscode>1</statuscode>
    </connectionreference>
    <connectionreference connectionreferencelogicalname="cr570_sharedconversionservice_6379c">
      <connectionreferencedisplayname>Content Conversion ServiceFusionAndSumoQuotesIntegration-6379c</connectionreferencedisplayname>
      <connectorid>/providers/Microsoft.PowerApps/apis/shared_conversionservice</connectorid>
      <iscustomizable>1</iscustomizable>
      <promptingbehavior>0</promptingbehavior>
      <statecode>0</statecode>
      <statuscode>1</statuscode>
    </connectionreference>
    <connectionreference connectionreferencelogicalname="cr570_sharedgmail_c50b8">
      <connectionreferencedisplayname>Gmail ServiceFusionAndSumoQuotesIntegration-c50b8</connectionreferencedisplayname>
      <connectorid>/providers/Microsoft.PowerApps/apis/shared_gmail</connectorid>
      <iscustomizable>1</iscustomizable>
      <promptingbehavior>0</promptingbehavior>
      <statecode>0</statecode>
      <statuscode>1</statuscode>
    </connectionreference>
    <connectionreference connectionreferencelogicalname="cr570_sharedonedrive_0881d">
      <connectionreferencedisplayname>OneDrive ServiceFusionAndSumoQuotesIntegration-0881d</connectionreferencedisplayname>
      <connectorid>/providers/Microsoft.PowerApps/apis/shared_onedrive</connectorid>
      <iscustomizable>1</iscustomizable>
      <promptingbehavior>0</promptingbehavior>
      <statecode>0</statecode>
      <statuscode>1</statuscode>
    </connectionreference>
    <connectionreference connectionreferencelogicalname="new_shareduiflow_f8a57">
      <connectionreferencedisplayname>Desktop flows ServiceFusionSumoQuoteIntegeration</connectionreferencedisplayname>
      <connectorid>/providers/Microsoft.PowerApps/apis/shared_uiflow</connectorid>
      <iscustomizable>1</iscustomizable>
      <promptingbehavior>0</promptingbehavior>
      <statecode>0</statecode>
      <statuscode>1</statuscode>
    </connectionreference>
  </connectionreferences>
  <Languages>
    <Language>1033</Language>
  </Languages>
</ImportExportXml>